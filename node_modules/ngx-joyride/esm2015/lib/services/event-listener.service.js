/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/event-listener.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, RendererFactory2 } from '@angular/core';
import { Subject } from 'rxjs';
import { DomRefService } from './dom.service';
export class Scroll {
}
if (false) {
    /** @type {?} */
    Scroll.prototype.scrollX;
    /** @type {?} */
    Scroll.prototype.scrollY;
}
export class EventListenerService {
    /**
     * @param {?} rendererFactory
     * @param {?} DOMService
     */
    constructor(rendererFactory, DOMService) {
        this.rendererFactory = rendererFactory;
        this.DOMService = DOMService;
        this.scrollEvent = new Subject();
        this.resizeEvent = new Subject();
        this.renderer = rendererFactory.createRenderer(null, null);
    }
    /**
     * @return {?}
     */
    startListeningScrollEvents() {
        this.scrollUnlisten = this.renderer.listen('document', 'scroll', (/**
         * @param {?} evt
         * @return {?}
         */
        evt => {
            this.scrollEvent.next({
                scrollX: this.DOMService.getNativeWindow().pageXOffset,
                scrollY: this.DOMService.getNativeWindow().pageYOffset
            });
        }));
    }
    /**
     * @return {?}
     */
    startListeningResizeEvents() {
        this.resizeUnlisten = this.renderer.listen('window', 'resize', (/**
         * @param {?} evt
         * @return {?}
         */
        evt => {
            this.resizeEvent.next(evt);
        }));
    }
    /**
     * @return {?}
     */
    stopListeningScrollEvents() {
        this.scrollUnlisten();
    }
    /**
     * @return {?}
     */
    stopListeningResizeEvents() {
        this.resizeUnlisten();
    }
}
EventListenerService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
EventListenerService.ctorParameters = () => [
    { type: RendererFactory2 },
    { type: DomRefService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.scrollUnlisten;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.resizeUnlisten;
    /** @type {?} */
    EventListenerService.prototype.scrollEvent;
    /** @type {?} */
    EventListenerService.prototype.resizeEvent;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.rendererFactory;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.DOMService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQtbGlzdGVuZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1qb3lyaWRlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2V2ZW50LWxpc3RlbmVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFhLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QyxNQUFNLE9BQU8sTUFBTTtDQUdsQjs7O0lBRkcseUJBQWdCOztJQUNoQix5QkFBZ0I7O0FBSXBCLE1BQU0sT0FBTyxvQkFBb0I7Ozs7O0lBUTdCLFlBQTZCLGVBQWlDLEVBQW1CLFVBQXlCO1FBQTdFLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtRQUFtQixlQUFVLEdBQVYsVUFBVSxDQUFlO1FBSDFHLGdCQUFXLEdBQW9CLElBQUksT0FBTyxFQUFVLENBQUM7UUFDckQsZ0JBQVcsR0FBb0IsSUFBSSxPQUFPLEVBQVUsQ0FBQztRQUdqRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQy9ELENBQUM7Ozs7SUFFRCwwQkFBMEI7UUFDdEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsUUFBUTs7OztRQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ25FLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO2dCQUNsQixPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxXQUFXO2dCQUN0RCxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxXQUFXO2FBQ3pELENBQUMsQ0FBQztRQUNQLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUVELDBCQUEwQjtRQUN0QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFROzs7O1FBQUUsR0FBRyxDQUFDLEVBQUU7WUFDakUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7O0lBRUQseUJBQXlCO1FBQ3JCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7O0lBRUQseUJBQXlCO1FBQ3JCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7WUFsQ0osVUFBVTs7OztZQVRxQixnQkFBZ0I7WUFFdkMsYUFBYTs7Ozs7OztJQVNsQix3Q0FBNEI7Ozs7O0lBQzVCLDhDQUE0Qjs7Ozs7SUFDNUIsOENBQTRCOztJQUU1QiwyQ0FBcUQ7O0lBQ3JELDJDQUFxRDs7Ozs7SUFFekMsK0NBQWtEOzs7OztJQUFFLDBDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIFJlbmRlcmVyMiwgUmVuZGVyZXJGYWN0b3J5MiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IERvbVJlZlNlcnZpY2UgfSBmcm9tICcuL2RvbS5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTY3JvbGwge1xyXG4gICAgc2Nyb2xsWDogbnVtYmVyO1xyXG4gICAgc2Nyb2xsWTogbnVtYmVyO1xyXG59XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBFdmVudExpc3RlbmVyU2VydmljZSB7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjI7XHJcbiAgICBwcml2YXRlIHNjcm9sbFVubGlzdGVuOiBhbnk7XHJcbiAgICBwcml2YXRlIHJlc2l6ZVVubGlzdGVuOiBhbnk7XHJcblxyXG4gICAgc2Nyb2xsRXZlbnQ6IFN1YmplY3Q8U2Nyb2xsPiA9IG5ldyBTdWJqZWN0PFNjcm9sbD4oKTtcclxuICAgIHJlc2l6ZUV2ZW50OiBTdWJqZWN0PG51bWJlcj4gPSBuZXcgU3ViamVjdDxudW1iZXI+KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSByZW5kZXJlckZhY3Rvcnk6IFJlbmRlcmVyRmFjdG9yeTIsIHByaXZhdGUgcmVhZG9ubHkgRE9NU2VydmljZTogRG9tUmVmU2VydmljZSkge1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlckZhY3RvcnkuY3JlYXRlUmVuZGVyZXIobnVsbCwgbnVsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnRMaXN0ZW5pbmdTY3JvbGxFdmVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5zY3JvbGxVbmxpc3RlbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCdkb2N1bWVudCcsICdzY3JvbGwnLCBldnQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbEV2ZW50Lm5leHQoe1xyXG4gICAgICAgICAgICAgICAgc2Nyb2xsWDogdGhpcy5ET01TZXJ2aWNlLmdldE5hdGl2ZVdpbmRvdygpLnBhZ2VYT2Zmc2V0LFxyXG4gICAgICAgICAgICAgICAgc2Nyb2xsWTogdGhpcy5ET01TZXJ2aWNlLmdldE5hdGl2ZVdpbmRvdygpLnBhZ2VZT2Zmc2V0XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0TGlzdGVuaW5nUmVzaXplRXZlbnRzKCkge1xyXG4gICAgICAgIHRoaXMucmVzaXplVW5saXN0ZW4gPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbignd2luZG93JywgJ3Jlc2l6ZScsIGV2dCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzaXplRXZlbnQubmV4dChldnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0b3BMaXN0ZW5pbmdTY3JvbGxFdmVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5zY3JvbGxVbmxpc3RlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0b3BMaXN0ZW5pbmdSZXNpemVFdmVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5yZXNpemVVbmxpc3RlbigpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==