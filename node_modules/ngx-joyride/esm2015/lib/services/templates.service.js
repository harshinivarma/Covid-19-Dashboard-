/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/templates.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class TemplatesService {
    /**
     * @param {?} template
     * @return {?}
     */
    setPrevButton(template) {
        this._prevButton = template;
    }
    /**
     * @return {?}
     */
    getPrevButton() {
        return this._prevButton;
    }
    /**
     * @param {?} template
     * @return {?}
     */
    setNextButton(template) {
        this._nextButton = template;
    }
    /**
     * @return {?}
     */
    getNextButton() {
        return this._nextButton;
    }
    /**
     * @param {?} template
     * @return {?}
     */
    setDoneButton(template) {
        this._doneButton = template;
    }
    /**
     * @return {?}
     */
    getDoneButton() {
        return this._doneButton;
    }
    /**
     * @param {?} template
     * @return {?}
     */
    setCounter(template) {
        this._counter = template;
    }
    /**
     * @return {?}
     */
    getCounter() {
        return this._counter;
    }
}
TemplatesService.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._prevButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._nextButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._doneButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._counter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtam95cmlkZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy90ZW1wbGF0ZXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFHeEQsTUFBTSxPQUFPLGdCQUFnQjs7Ozs7SUFNekIsYUFBYSxDQUFDLFFBQTBCO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBRUQsYUFBYSxDQUFDLFFBQTBCO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBRUQsYUFBYSxDQUFDLFFBQTBCO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBQ0QsVUFBVSxDQUFDLFFBQTBCO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7OztZQXBDSixVQUFVOzs7Ozs7O0lBRVAsdUNBQXNDOzs7OztJQUN0Qyx1Q0FBc0M7Ozs7O0lBQ3RDLHVDQUFzQzs7Ozs7SUFDdEMsb0NBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRlbXBsYXRlc1NlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfcHJldkJ1dHRvbjogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHByaXZhdGUgX25leHRCdXR0b246IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBwcml2YXRlIF9kb25lQnV0dG9uOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgcHJpdmF0ZSBfY291bnRlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgICBzZXRQcmV2QnV0dG9uKHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XHJcbiAgICAgICAgdGhpcy5fcHJldkJ1dHRvbiA9IHRlbXBsYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFByZXZCdXR0b24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ByZXZCdXR0b247XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TmV4dEJ1dHRvbih0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xyXG4gICAgICAgIHRoaXMuX25leHRCdXR0b24gPSB0ZW1wbGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXROZXh0QnV0dG9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9uZXh0QnV0dG9uO1xyXG4gICAgfVxyXG5cclxuICAgIHNldERvbmVCdXR0b24odGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHtcclxuICAgICAgICB0aGlzLl9kb25lQnV0dG9uID0gdGVtcGxhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RG9uZUJ1dHRvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZG9uZUJ1dHRvbjtcclxuICAgIH1cclxuICAgIHNldENvdW50ZXIodGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHtcclxuICAgICAgICB0aGlzLl9jb3VudGVyID0gdGVtcGxhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q291bnRlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY291bnRlcjtcclxuICAgIH1cclxufVxyXG4iXX0=