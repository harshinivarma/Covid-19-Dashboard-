/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/logger.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { JoyrideOptionsService } from './joyride-options.service';
/** @type {?} */
var JOYRIDE = 'ngx-joyride:::';
var LoggerService = /** @class */ (function () {
    function LoggerService(optionService) {
        this.optionService = optionService;
    }
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.debug = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.debug(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.info = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.info(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.warn = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.warn(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.error = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.error(JOYRIDE + message, data);
        }
    };
    LoggerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LoggerService.ctorParameters = function () { return [
        { type: JoyrideOptionsService }
    ]; };
    return LoggerService;
}());
export { LoggerService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LoggerService.prototype.optionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtam95cmlkZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9sb2dnZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7O0lBRTVELE9BQU8sR0FBRyxnQkFBZ0I7QUFFaEM7SUFHSSx1QkFBNkIsYUFBb0M7UUFBcEMsa0JBQWEsR0FBYixhQUFhLENBQXVCO0lBQUksQ0FBQzs7Ozs7O0lBRXRFLDZCQUFLOzs7OztJQUFMLFVBQU0sT0FBZ0IsRUFBRSxJQUFjO1FBQWQscUJBQUEsRUFBQSxTQUFjO1FBQ2xDLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUsRUFBRTtZQUNyQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDMUM7SUFDTCxDQUFDOzs7Ozs7SUFFRCw0QkFBSTs7Ozs7SUFBSixVQUFLLE9BQWdCLEVBQUUsSUFBYztRQUFkLHFCQUFBLEVBQUEsU0FBYztRQUNqQyxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsY0FBYyxFQUFFLEVBQUU7WUFDckMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQzs7Ozs7O0lBRUQsNEJBQUk7Ozs7O0lBQUosVUFBSyxPQUFnQixFQUFFLElBQWM7UUFBZCxxQkFBQSxFQUFBLFNBQWM7UUFDakMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLGNBQWMsRUFBRSxFQUFFO1lBQ3JDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztTQUN6QztJQUNMLENBQUM7Ozs7OztJQUVELDZCQUFLOzs7OztJQUFMLFVBQU0sT0FBZ0IsRUFBRSxJQUFjO1FBQWQscUJBQUEsRUFBQSxTQUFjO1FBQ2xDLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUsRUFBRTtZQUNyQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDMUM7SUFDTCxDQUFDOztnQkEzQkosVUFBVTs7OztnQkFKRixxQkFBcUI7O0lBaUM5QixvQkFBQztDQUFBLEFBN0JELElBNkJDO1NBNUJZLGFBQWE7Ozs7OztJQUVWLHNDQUFxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSm95cmlkZU9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi9qb3lyaWRlLW9wdGlvbnMuc2VydmljZSc7XHJcblxyXG5jb25zdCBKT1lSSURFID0gJ25neC1qb3lyaWRlOjo6JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIExvZ2dlclNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgb3B0aW9uU2VydmljZTogSm95cmlkZU9wdGlvbnNTZXJ2aWNlKSB7IH1cclxuXHJcbiAgICBkZWJ1ZyhtZXNzYWdlPzogc3RyaW5nLCBkYXRhOiBhbnkgPSBcIlwiKSB7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9uU2VydmljZS5hcmVMb2dzRW5hYmxlZCgpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoSk9ZUklERSArIG1lc3NhZ2UsIGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbmZvKG1lc3NhZ2U/OiBzdHJpbmcsIGRhdGE6IGFueSA9IFwiXCIpIHtcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25TZXJ2aWNlLmFyZUxvZ3NFbmFibGVkKCkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5pbmZvKEpPWVJJREUgKyBtZXNzYWdlLCBkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgd2FybihtZXNzYWdlPzogc3RyaW5nLCBkYXRhOiBhbnkgPSBcIlwiKSB7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9uU2VydmljZS5hcmVMb2dzRW5hYmxlZCgpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihKT1lSSURFICsgbWVzc2FnZSwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGVycm9yKG1lc3NhZ2U/OiBzdHJpbmcsIGRhdGE6IGFueSA9IFwiXCIpIHtcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25TZXJ2aWNlLmFyZUxvZ3NFbmFibGVkKCkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihKT1lSSURFICsgbWVzc2FnZSwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdfQ==