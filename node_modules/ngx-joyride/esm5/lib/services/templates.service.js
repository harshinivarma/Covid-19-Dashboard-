/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/templates.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var TemplatesService = /** @class */ (function () {
    function TemplatesService() {
    }
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setPrevButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._prevButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getPrevButton = /**
     * @return {?}
     */
    function () {
        return this._prevButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setNextButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._nextButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getNextButton = /**
     * @return {?}
     */
    function () {
        return this._nextButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setDoneButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._doneButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getDoneButton = /**
     * @return {?}
     */
    function () {
        return this._doneButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setCounter = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._counter = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getCounter = /**
     * @return {?}
     */
    function () {
        return this._counter;
    };
    TemplatesService.decorators = [
        { type: Injectable }
    ];
    return TemplatesService;
}());
export { TemplatesService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._prevButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._nextButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._doneButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._counter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtam95cmlkZS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy90ZW1wbGF0ZXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFeEQ7SUFBQTtJQXFDQSxDQUFDOzs7OztJQTlCRyx3Q0FBYTs7OztJQUFiLFVBQWMsUUFBMEI7UUFDcEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELHdDQUFhOzs7SUFBYjtRQUNJLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM1QixDQUFDOzs7OztJQUVELHdDQUFhOzs7O0lBQWIsVUFBYyxRQUEwQjtRQUNwQyxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsd0NBQWE7OztJQUFiO1FBQ0ksT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBRUQsd0NBQWE7Ozs7SUFBYixVQUFjLFFBQTBCO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCx3Q0FBYTs7O0lBQWI7UUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFDRCxxQ0FBVTs7OztJQUFWLFVBQVcsUUFBMEI7UUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELHFDQUFVOzs7SUFBVjtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDOztnQkFwQ0osVUFBVTs7SUFxQ1gsdUJBQUM7Q0FBQSxBQXJDRCxJQXFDQztTQXBDWSxnQkFBZ0I7Ozs7OztJQUN6Qix1Q0FBc0M7Ozs7O0lBQ3RDLHVDQUFzQzs7Ozs7SUFDdEMsdUNBQXNDOzs7OztJQUN0QyxvQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVGVtcGxhdGVzU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9wcmV2QnV0dG9uOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgcHJpdmF0ZSBfbmV4dEJ1dHRvbjogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHByaXZhdGUgX2RvbmVCdXR0b246IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBwcml2YXRlIF9jb3VudGVyOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICAgIHNldFByZXZCdXR0b24odGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHtcclxuICAgICAgICB0aGlzLl9wcmV2QnV0dG9uID0gdGVtcGxhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UHJldkJ1dHRvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcHJldkJ1dHRvbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXROZXh0QnV0dG9uKHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XHJcbiAgICAgICAgdGhpcy5fbmV4dEJ1dHRvbiA9IHRlbXBsYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE5leHRCdXR0b24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX25leHRCdXR0b247XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RG9uZUJ1dHRvbih0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xyXG4gICAgICAgIHRoaXMuX2RvbmVCdXR0b24gPSB0ZW1wbGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXREb25lQnV0dG9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kb25lQnV0dG9uO1xyXG4gICAgfVxyXG4gICAgc2V0Q291bnRlcih0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xyXG4gICAgICAgIHRoaXMuX2NvdW50ZXIgPSB0ZW1wbGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb3VudGVyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb3VudGVyO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==