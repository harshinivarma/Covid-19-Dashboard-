/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/event-listener.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, RendererFactory2 } from '@angular/core';
import { Subject } from 'rxjs';
import { DomRefService } from './dom.service';
var Scroll = /** @class */ (function () {
    function Scroll() {
    }
    return Scroll;
}());
export { Scroll };
if (false) {
    /** @type {?} */
    Scroll.prototype.scrollX;
    /** @type {?} */
    Scroll.prototype.scrollY;
}
var EventListenerService = /** @class */ (function () {
    function EventListenerService(rendererFactory, DOMService) {
        this.rendererFactory = rendererFactory;
        this.DOMService = DOMService;
        this.scrollEvent = new Subject();
        this.resizeEvent = new Subject();
        this.renderer = rendererFactory.createRenderer(null, null);
    }
    /**
     * @return {?}
     */
    EventListenerService.prototype.startListeningScrollEvents = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.scrollUnlisten = this.renderer.listen('document', 'scroll', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.scrollEvent.next({
                scrollX: _this.DOMService.getNativeWindow().pageXOffset,
                scrollY: _this.DOMService.getNativeWindow().pageYOffset
            });
        }));
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.startListeningResizeEvents = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeUnlisten = this.renderer.listen('window', 'resize', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.resizeEvent.next(evt);
        }));
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.stopListeningScrollEvents = /**
     * @return {?}
     */
    function () {
        this.scrollUnlisten();
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.stopListeningResizeEvents = /**
     * @return {?}
     */
    function () {
        this.resizeUnlisten();
    };
    EventListenerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventListenerService.ctorParameters = function () { return [
        { type: RendererFactory2 },
        { type: DomRefService }
    ]; };
    return EventListenerService;
}());
export { EventListenerService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.scrollUnlisten;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.resizeUnlisten;
    /** @type {?} */
    EventListenerService.prototype.scrollEvent;
    /** @type {?} */
    EventListenerService.prototype.resizeEvent;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.rendererFactory;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.DOMService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQtbGlzdGVuZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1qb3lyaWRlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2V2ZW50LWxpc3RlbmVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFhLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QztJQUFBO0lBR0EsQ0FBQztJQUFELGFBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQzs7OztJQUZHLHlCQUFnQjs7SUFDaEIseUJBQWdCOztBQUdwQjtJQVNJLDhCQUE2QixlQUFpQyxFQUFtQixVQUF5QjtRQUE3RSxvQkFBZSxHQUFmLGVBQWUsQ0FBa0I7UUFBbUIsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQUgxRyxnQkFBVyxHQUFvQixJQUFJLE9BQU8sRUFBVSxDQUFDO1FBQ3JELGdCQUFXLEdBQW9CLElBQUksT0FBTyxFQUFVLENBQUM7UUFHakQsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMvRCxDQUFDOzs7O0lBRUQseURBQTBCOzs7SUFBMUI7UUFBQSxpQkFPQztRQU5HLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLFFBQVE7Ozs7UUFBRSxVQUFBLEdBQUc7WUFDaEUsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7Z0JBQ2xCLE9BQU8sRUFBRSxLQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxDQUFDLFdBQVc7Z0JBQ3RELE9BQU8sRUFBRSxLQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxDQUFDLFdBQVc7YUFDekQsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7O0lBRUQseURBQTBCOzs7SUFBMUI7UUFBQSxpQkFJQztRQUhHLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFFBQVE7Ozs7UUFBRSxVQUFBLEdBQUc7WUFDOUQsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7O0lBRUQsd0RBQXlCOzs7SUFBekI7UUFDSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVELHdEQUF5Qjs7O0lBQXpCO1FBQ0ksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7O2dCQWxDSixVQUFVOzs7O2dCQVRxQixnQkFBZ0I7Z0JBRXZDLGFBQWE7O0lBMEN0QiwyQkFBQztDQUFBLEFBbkNELElBbUNDO1NBbENZLG9CQUFvQjs7Ozs7O0lBQzdCLHdDQUE0Qjs7Ozs7SUFDNUIsOENBQTRCOzs7OztJQUM1Qiw4Q0FBNEI7O0lBRTVCLDJDQUFxRDs7SUFDckQsMkNBQXFEOzs7OztJQUV6QywrQ0FBa0Q7Ozs7O0lBQUUsMENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgUmVuZGVyZXIyLCBSZW5kZXJlckZhY3RvcnkyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgRG9tUmVmU2VydmljZSB9IGZyb20gJy4vZG9tLnNlcnZpY2UnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNjcm9sbCB7XHJcbiAgICBzY3JvbGxYOiBudW1iZXI7XHJcbiAgICBzY3JvbGxZOiBudW1iZXI7XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEV2ZW50TGlzdGVuZXJTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMjtcclxuICAgIHByaXZhdGUgc2Nyb2xsVW5saXN0ZW46IGFueTtcclxuICAgIHByaXZhdGUgcmVzaXplVW5saXN0ZW46IGFueTtcclxuXHJcbiAgICBzY3JvbGxFdmVudDogU3ViamVjdDxTY3JvbGw+ID0gbmV3IFN1YmplY3Q8U2Nyb2xsPigpO1xyXG4gICAgcmVzaXplRXZlbnQ6IFN1YmplY3Q8bnVtYmVyPiA9IG5ldyBTdWJqZWN0PG51bWJlcj4oKTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHJlbmRlcmVyRmFjdG9yeTogUmVuZGVyZXJGYWN0b3J5MiwgcHJpdmF0ZSByZWFkb25seSBET01TZXJ2aWNlOiBEb21SZWZTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyRmFjdG9yeS5jcmVhdGVSZW5kZXJlcihudWxsLCBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGFydExpc3RlbmluZ1Njcm9sbEV2ZW50cygpIHtcclxuICAgICAgICB0aGlzLnNjcm9sbFVubGlzdGVuID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ2RvY3VtZW50JywgJ3Njcm9sbCcsIGV2dCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsRXZlbnQubmV4dCh7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxYOiB0aGlzLkRPTVNlcnZpY2UuZ2V0TmF0aXZlV2luZG93KCkucGFnZVhPZmZzZXQsXHJcbiAgICAgICAgICAgICAgICBzY3JvbGxZOiB0aGlzLkRPTVNlcnZpY2UuZ2V0TmF0aXZlV2luZG93KCkucGFnZVlPZmZzZXRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnRMaXN0ZW5pbmdSZXNpemVFdmVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5yZXNpemVVbmxpc3RlbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgZXZ0ID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZXNpemVFdmVudC5uZXh0KGV2dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RvcExpc3RlbmluZ1Njcm9sbEV2ZW50cygpIHtcclxuICAgICAgICB0aGlzLnNjcm9sbFVubGlzdGVuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RvcExpc3RlbmluZ1Jlc2l6ZUV2ZW50cygpIHtcclxuICAgICAgICB0aGlzLnJlc2l6ZVVubGlzdGVuKCk7XHJcbiAgICB9XHJcbn1cclxuIl19