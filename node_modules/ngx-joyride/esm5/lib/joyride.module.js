/**
 * @fileoverview added by tsickle
 * Generated from: lib/joyride.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
import { JoyrideDirective } from './directives/joyride.directive';
import { JoyrideService } from './services/joyride.service';
import { JoyrideStepComponent } from "./components/step/joyride-step.component";
import { JoyrideButtonComponent } from "./components/button/button.component";
import { JoyrideCloseButtonComponent } from "./components/close-button/close-button.component";
import { JoyrideStepService } from "./services/joyride-step.service";
import { JoyrideBackdropService } from "./services/joyride-backdrop.service";
import { JoyrideArrowComponent } from "./components/arrow/arrow.component";
import { EventListenerService } from "./services/event-listener.service";
import { JoyrideStepsContainerService } from "./services/joyride-steps-container.service";
import { DocumentService } from "./services/document.service";
import { JoyrideOptionsService } from './services/joyride-options.service';
import { StepDrawerService } from './services/step-drawer.service';
import { DomRefService } from './services/dom.service';
import { LoggerService } from './services/logger.service';
import { RouterModule } from "@angular/router";
import { TemplatesService } from "./services/templates.service";
/** @type {?} */
export var routerModuleForChild = RouterModule.forChild([]);
var JoyrideModule = /** @class */ (function () {
    function JoyrideModule() {
    }
    /**
     * @return {?}
     */
    JoyrideModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: JoyrideModule,
            providers: [
                JoyrideService,
                JoyrideStepService,
                JoyrideStepsContainerService,
                JoyrideBackdropService,
                EventListenerService,
                DocumentService,
                JoyrideOptionsService,
                StepDrawerService,
                DomRefService,
                LoggerService,
                TemplatesService
            ]
        };
    };
    /**
     * @return {?}
     */
    JoyrideModule.forChild = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: JoyrideModule,
            providers: []
        };
    };
    JoyrideModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, routerModuleForChild],
                    declarations: [
                        JoyrideDirective,
                        JoyrideStepComponent,
                        JoyrideArrowComponent,
                        JoyrideButtonComponent,
                        JoyrideCloseButtonComponent
                    ],
                    entryComponents: [JoyrideStepComponent],
                    exports: [
                        JoyrideDirective
                    ]
                },] }
    ];
    return JoyrideModule;
}());
export { JoyrideModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam95cmlkZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtam95cmlkZS8iLCJzb3VyY2VzIjpbImxpYi9qb3lyaWRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDOUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDL0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDckUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDekUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDMUYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUVoRSxNQUFNLEtBQU8sb0JBQW9CLEdBQXdCLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0FBRWxGO0lBQUE7SUF1Q0EsQ0FBQzs7OztJQXhCVSxxQkFBTzs7O0lBQWQ7UUFDSSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxFQUFFO2dCQUNQLGNBQWM7Z0JBQ2Qsa0JBQWtCO2dCQUNsQiw0QkFBNEI7Z0JBQzVCLHNCQUFzQjtnQkFDdEIsb0JBQW9CO2dCQUNwQixlQUFlO2dCQUNmLHFCQUFxQjtnQkFDckIsaUJBQWlCO2dCQUNqQixhQUFhO2dCQUNiLGFBQWE7Z0JBQ2IsZ0JBQWdCO2FBQ25CO1NBQ0osQ0FBQTtJQUNMLENBQUM7Ozs7SUFDTSxzQkFBUTs7O0lBQWY7UUFDSSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxFQUFFLEVBQUU7U0FDaEIsQ0FBQTtJQUNMLENBQUM7O2dCQXRDSixRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG9CQUFvQixDQUFDO29CQUM3QyxZQUFZLEVBQUU7d0JBQ1YsZ0JBQWdCO3dCQUNoQixvQkFBb0I7d0JBQ3BCLHFCQUFxQjt3QkFDckIsc0JBQXNCO3dCQUN0QiwyQkFBMkI7cUJBQzlCO29CQUNELGVBQWUsRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUN2QyxPQUFPLEVBQUU7d0JBQ0wsZ0JBQWdCO3FCQUNuQjtpQkFDSjs7SUEwQkQsb0JBQUM7Q0FBQSxBQXZDRCxJQXVDQztTQXpCWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XHJcbmltcG9ydCB7IEpveXJpZGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvam95cmlkZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBKb3lyaWRlU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvam95cmlkZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSm95cmlkZVN0ZXBDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL3N0ZXAvam95cmlkZS1zdGVwLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBKb3lyaWRlQnV0dG9uQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBKb3lyaWRlQ2xvc2VCdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2Nsb3NlLWJ1dHRvbi9jbG9zZS1idXR0b24uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEpveXJpZGVTdGVwU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL2pveXJpZGUtc3RlcC5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEpveXJpZGVCYWNrZHJvcFNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9qb3lyaWRlLWJhY2tkcm9wLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgSm95cmlkZUFycm93Q29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9hcnJvdy9hcnJvdy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgRXZlbnRMaXN0ZW5lclNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9ldmVudC1saXN0ZW5lci5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEpveXJpZGVTdGVwc0NvbnRhaW5lclNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9qb3lyaWRlLXN0ZXBzLWNvbnRhaW5lci5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IERvY3VtZW50U2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL2RvY3VtZW50LnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgSm95cmlkZU9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9qb3lyaWRlLW9wdGlvbnMuc2VydmljZSc7XHJcbmltcG9ydCB7IFN0ZXBEcmF3ZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zdGVwLWRyYXdlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRG9tUmVmU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZG9tLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9sb2dnZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgVGVtcGxhdGVzU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL3RlbXBsYXRlcy5zZXJ2aWNlXCI7XHJcblxyXG5leHBvcnQgY29uc3Qgcm91dGVyTW9kdWxlRm9yQ2hpbGQ6IE1vZHVsZVdpdGhQcm92aWRlcnMgPSBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoW10pO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIHJvdXRlck1vZHVsZUZvckNoaWxkXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIEpveXJpZGVEaXJlY3RpdmUsXHJcbiAgICAgICAgSm95cmlkZVN0ZXBDb21wb25lbnQsXHJcbiAgICAgICAgSm95cmlkZUFycm93Q29tcG9uZW50LFxyXG4gICAgICAgIEpveXJpZGVCdXR0b25Db21wb25lbnQsXHJcbiAgICAgICAgSm95cmlkZUNsb3NlQnV0dG9uQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbSm95cmlkZVN0ZXBDb21wb25lbnRdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIEpveXJpZGVEaXJlY3RpdmVcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEpveXJpZGVNb2R1bGUge1xyXG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IEpveXJpZGVNb2R1bGUsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgICAgICAgICAgSm95cmlkZVNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgICBKb3lyaWRlU3RlcFNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgICBKb3lyaWRlU3RlcHNDb250YWluZXJTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgSm95cmlkZUJhY2tkcm9wU2VydmljZSxcclxuICAgICAgICAgICAgICAgIEV2ZW50TGlzdGVuZXJTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgRG9jdW1lbnRTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgSm95cmlkZU9wdGlvbnNTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgU3RlcERyYXdlclNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgICBEb21SZWZTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgTG9nZ2VyU2VydmljZSxcclxuICAgICAgICAgICAgICAgIFRlbXBsYXRlc1NlcnZpY2VcclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHN0YXRpYyBmb3JDaGlsZCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZ01vZHVsZTogSm95cmlkZU1vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=