import { Injectable, Inject, PLATFORM_ID, EventEmitter, Directive, ViewContainerRef, Input, Output, RendererFactory2, Component, ViewEncapsulation, Injector, Renderer2, ViewChild, ComponentFactoryResolver, ApplicationRef, NgModule } from '@angular/core';
import { isPlatformBrowser, CommonModule } from '@angular/common';
import { ReplaySubject, of, Observable, Subject } from 'rxjs';
import { __extends } from 'tslib';
import { Router, RouterModule } from '@angular/router';
import { finalize } from 'rxjs/operators';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/joyride-step.class.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideStep = /** @class */ (function () {
    function JoyrideStep() {
        this.title = new ReplaySubject();
        this.text = new ReplaySubject();
    }
    return JoyrideStep;
}());
if (false) {
    /** @type {?} */
    JoyrideStep.prototype.name;
    /** @type {?} */
    JoyrideStep.prototype.route;
    /** @type {?} */
    JoyrideStep.prototype.position;
    /** @type {?} */
    JoyrideStep.prototype.title;
    /** @type {?} */
    JoyrideStep.prototype.text;
    /** @type {?} */
    JoyrideStep.prototype.stepContent;
    /** @type {?} */
    JoyrideStep.prototype.stepContentParams;
    /** @type {?} */
    JoyrideStep.prototype.nextClicked;
    /** @type {?} */
    JoyrideStep.prototype.prevCliked;
    /** @type {?} */
    JoyrideStep.prototype.tourDone;
    /** @type {?} */
    JoyrideStep.prototype.transformCssStyle;
    /** @type {?} */
    JoyrideStep.prototype.isElementOrAncestorFixed;
    /** @type {?} */
    JoyrideStep.prototype.targetViewContainer;
    /** @type {?} */
    JoyrideStep.prototype.stepInstance;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/joyride-options.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var DEFAULT_THEME_COLOR = '#3b5560';
/** @type {?} */
var STEP_DEFAULT_POSITION = 'bottom';
/** @type {?} */
var DEFAULT_TIMEOUT_BETWEEN_STEPS = 1;
var ObservableCustomTexts = /** @class */ (function () {
    function ObservableCustomTexts() {
    }
    return ObservableCustomTexts;
}());
if (false) {
    /** @type {?} */
    ObservableCustomTexts.prototype.prev;
    /** @type {?} */
    ObservableCustomTexts.prototype.next;
    /** @type {?} */
    ObservableCustomTexts.prototype.done;
    /** @type {?} */
    ObservableCustomTexts.prototype.close;
}
/** @type {?} */
var DEFAULT_TEXTS = {
    prev: of('prev'),
    next: of('next'),
    done: of('done'),
    close: of(null)
};
/**
 * @record
 */
function IJoyrideOptionsService() { }
if (false) {
    /**
     * @param {?} options
     * @return {?}
     */
    IJoyrideOptionsService.prototype.setOptions = function (options) { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getBackdropColor = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getThemeColor = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getStepDefaultPosition = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getStepsOrder = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getFirstStep = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getWaitingTime = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.areLogsEnabled = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.isCounterVisible = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.isPrevButtonVisible = function () { };
    /**
     * @return {?}
     */
    IJoyrideOptionsService.prototype.getCustomTexts = function () { };
}
var JoyrideOptionsService = /** @class */ (function () {
    function JoyrideOptionsService() {
        this.themeColor = DEFAULT_THEME_COLOR;
        this.stepDefaultPosition = STEP_DEFAULT_POSITION;
        this.logsEnabled = false;
        this.showCounter = true;
        this.showPrevButton = true;
        this.stepsOrder = [];
    }
    /**
     * @param {?} options
     * @return {?}
     */
    JoyrideOptionsService.prototype.setOptions = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.stepsOrder = options.steps;
        this.stepDefaultPosition = options.stepDefaultPosition
            ? options.stepDefaultPosition
            : this.stepDefaultPosition;
        this.logsEnabled =
            typeof options.logsEnabled !== 'undefined'
                ? options.logsEnabled
                : this.logsEnabled;
        this.showCounter =
            typeof options.showCounter !== 'undefined'
                ? options.showCounter
                : this.showCounter;
        this.showPrevButton =
            typeof options.showPrevButton !== 'undefined'
                ? options.showPrevButton
                : this.showPrevButton;
        this.themeColor = options.themeColor
            ? options.themeColor
            : this.themeColor;
        this.firstStep = options.startWith;
        this.waitingTime =
            typeof options.waitingTime !== 'undefined'
                ? options.waitingTime
                : DEFAULT_TIMEOUT_BETWEEN_STEPS;
        typeof options.customTexts !== 'undefined'
            ? this.setCustomText(options.customTexts)
            : this.setCustomText(DEFAULT_TEXTS);
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getBackdropColor = /**
     * @return {?}
     */
    function () {
        return this.hexToRgb(this.themeColor);
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getThemeColor = /**
     * @return {?}
     */
    function () {
        return this.themeColor;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getStepDefaultPosition = /**
     * @return {?}
     */
    function () {
        return this.stepDefaultPosition;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getStepsOrder = /**
     * @return {?}
     */
    function () {
        return this.stepsOrder;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getFirstStep = /**
     * @return {?}
     */
    function () {
        return this.firstStep;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getWaitingTime = /**
     * @return {?}
     */
    function () {
        return this.waitingTime;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.areLogsEnabled = /**
     * @return {?}
     */
    function () {
        return this.logsEnabled;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.isCounterVisible = /**
     * @return {?}
     */
    function () {
        return this.showCounter;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.isPrevButtonVisible = /**
     * @return {?}
     */
    function () {
        return this.showPrevButton;
    };
    /**
     * @return {?}
     */
    JoyrideOptionsService.prototype.getCustomTexts = /**
     * @return {?}
     */
    function () {
        return this.customTexts;
    };
    /**
     * @private
     * @param {?} texts
     * @return {?}
     */
    JoyrideOptionsService.prototype.setCustomText = /**
     * @private
     * @param {?} texts
     * @return {?}
     */
    function (texts) {
        /** @type {?} */
        var prev;
        /** @type {?} */
        var next;
        /** @type {?} */
        var done;
        /** @type {?} */
        var close;
        prev = texts.prev ? texts.prev : DEFAULT_TEXTS.prev;
        next = texts.next ? texts.next : DEFAULT_TEXTS.next;
        done = texts.done ? texts.done : DEFAULT_TEXTS.done;
        close = texts.close ? texts.close : DEFAULT_TEXTS.close;
        this.customTexts = (/** @type {?} */ ({
            prev: this.toObservable(prev),
            next: this.toObservable(next),
            done: this.toObservable(done),
            close: this.toObservable(close)
        }));
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    JoyrideOptionsService.prototype.toObservable = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value instanceof Observable ? value : of(value);
    };
    /**
     * @private
     * @param {?} hex
     * @return {?}
     */
    JoyrideOptionsService.prototype.hexToRgb = /**
     * @private
     * @param {?} hex
     * @return {?}
     */
    function (hex) {
        /** @type {?} */
        var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
        hex = hex.replace(shorthandRegex, (/**
         * @param {?} m
         * @param {?} r
         * @param {?} g
         * @param {?} b
         * @return {?}
         */
        function (m, r, g, b) {
            return r + r + g + g + b + b;
        }));
        /** @type {?} */
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result
            ? parseInt(result[1], 16) + ", " + parseInt(result[2], 16) + ", " + parseInt(result[3], 16)
            : null;
    };
    JoyrideOptionsService.decorators = [
        { type: Injectable }
    ];
    return JoyrideOptionsService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.themeColor;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.stepDefaultPosition;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.logsEnabled;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.showCounter;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.showPrevButton;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.stepsOrder;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.firstStep;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.waitingTime;
    /**
     * @type {?}
     * @private
     */
    JoyrideOptionsService.prototype.customTexts;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/logger.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var JOYRIDE = 'ngx-joyride:::';
var LoggerService = /** @class */ (function () {
    function LoggerService(optionService) {
        this.optionService = optionService;
    }
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.debug = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.debug(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.info = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.info(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.warn = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.warn(JOYRIDE + message, data);
        }
    };
    /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    LoggerService.prototype.error = /**
     * @param {?=} message
     * @param {?=} data
     * @return {?}
     */
    function (message, data) {
        if (data === void 0) { data = ""; }
        if (this.optionService.areLogsEnabled()) {
            console.error(JOYRIDE + message, data);
        }
    };
    LoggerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LoggerService.ctorParameters = function () { return [
        { type: JoyrideOptionsService }
    ]; };
    return LoggerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    LoggerService.prototype.optionService;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/joyride-error.class.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideError = /** @class */ (function (_super) {
    __extends(JoyrideError, _super);
    function JoyrideError(message) {
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, JoyrideError.prototype);
        return _this;
    }
    return JoyrideError;
}(Error));
var JoyrideStepDoesNotExist = /** @class */ (function (_super) {
    __extends(JoyrideStepDoesNotExist, _super);
    function JoyrideStepDoesNotExist(message) {
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, JoyrideStepDoesNotExist.prototype);
        return _this;
    }
    return JoyrideStepDoesNotExist;
}(Error));
var JoyrideStepOutOfRange = /** @class */ (function (_super) {
    __extends(JoyrideStepOutOfRange, _super);
    function JoyrideStepOutOfRange(message) {
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, JoyrideStepOutOfRange.prototype);
        return _this;
    }
    return JoyrideStepOutOfRange;
}(Error));

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/joyride-steps-container.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var ROUTE_SEPARATOR = '@';
var Step = /** @class */ (function () {
    function Step() {
    }
    return Step;
}());
if (false) {
    /** @type {?} */
    Step.prototype.id;
    /** @type {?} */
    Step.prototype.step;
}
/** @enum {string} */
var StepActionType = {
    NEXT: "NEXT",
    PREV: "PREV",
};
var JoyrideStepsContainerService = /** @class */ (function () {
    function JoyrideStepsContainerService(stepOptions, logger) {
        this.stepOptions = stepOptions;
        this.logger = logger;
        this.tempSteps = [];
        this.currentStepIndex = -2;
        this.stepHasBeenModified = new Subject();
    }
    /**
     * @private
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getFirstStepIndex = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var firstStep = this.stepOptions.getFirstStep();
        /** @type {?} */
        var stepIds = this.stepOptions.getStepsOrder();
        /** @type {?} */
        var index = stepIds.indexOf(firstStep);
        if (index < 0) {
            index = 0;
            if (firstStep !== undefined)
                this.logger.warn("The step " + firstStep + " does not exist. Check in your step list if it's present.");
        }
        return index;
    };
    /**
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.init = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.logger.info('Initializing the steps array.');
        this.steps = [];
        this.currentStepIndex = this.getFirstStepIndex() - 1;
        /** @type {?} */
        var stepIds = this.stepOptions.getStepsOrder();
        stepIds.forEach((/**
         * @param {?} stepId
         * @return {?}
         */
        function (stepId) { return _this.steps.push({ id: stepId, step: null }); }));
    };
    /**
     * @param {?} stepToAdd
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.addStep = /**
     * @param {?} stepToAdd
     * @return {?}
     */
    function (stepToAdd) {
        /** @type {?} */
        var stepExist = this.tempSteps.filter((/**
         * @param {?} step
         * @return {?}
         */
        function (step) { return step.name === stepToAdd.name; })).length > 0;
        if (!stepExist) {
            this.logger.info("Adding step " + stepToAdd.name + " to the steps list.");
            this.tempSteps.push(stepToAdd);
        }
        else {
            /** @type {?} */
            var stepIndexToReplace = this.tempSteps.findIndex((/**
             * @param {?} step
             * @return {?}
             */
            function (step) { return step.name === stepToAdd.name; }));
            this.tempSteps[stepIndexToReplace] = stepToAdd;
        }
    };
    /**
     * @param {?} action
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.get = /**
     * @param {?} action
     * @return {?}
     */
    function (action) {
        if (action === StepActionType.NEXT)
            this.currentStepIndex++;
        else
            this.currentStepIndex--;
        if (this.currentStepIndex < 0 || this.currentStepIndex >= this.steps.length)
            throw new JoyrideStepOutOfRange('The first or last step of the tour cannot be found!');
        /** @type {?} */
        var stepName = this.getStepName(this.steps[this.currentStepIndex].id);
        /** @type {?} */
        var index = this.tempSteps.findIndex((/**
         * @param {?} step
         * @return {?}
         */
        function (step) { return step.name === stepName; }));
        /** @type {?} */
        var stepFound = this.tempSteps[index];
        this.steps[this.currentStepIndex].step = stepFound;
        if (stepFound == null) {
            this.logger.warn("Step " + this.steps[this.currentStepIndex].id + " not found in the DOM. Check if it's hidden by *ngIf directive.");
        }
        return stepFound;
    };
    /**
     * @param {?} action
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getStepRoute = /**
     * @param {?} action
     * @return {?}
     */
    function (action) {
        /** @type {?} */
        var stepID;
        if (action === StepActionType.NEXT) {
            stepID = this.steps[this.currentStepIndex + 1] ? this.steps[this.currentStepIndex + 1].id : null;
        }
        else {
            stepID = this.steps[this.currentStepIndex - 1] ? this.steps[this.currentStepIndex - 1].id : null;
        }
        /** @type {?} */
        var stepRoute = stepID && stepID.includes(ROUTE_SEPARATOR) ? stepID.split(ROUTE_SEPARATOR)[1] : '';
        return stepRoute;
    };
    /**
     * @param {?} stepName
     * @param {?} position
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.updatePosition = /**
     * @param {?} stepName
     * @param {?} position
     * @return {?}
     */
    function (stepName, position) {
        /** @type {?} */
        var index = this.getStepIndex(stepName);
        if (this.steps[index].step) {
            this.steps[index].step.position = position;
            this.stepHasBeenModified.next(this.steps[index].step);
        }
        else {
            this.logger.warn("Trying to modify the position of " + stepName + " to " + position + ". Step not found!Is this step located in a different route?");
        }
    };
    /**
     * @param {?} stepName
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getStepNumber = /**
     * @param {?} stepName
     * @return {?}
     */
    function (stepName) {
        return this.getStepIndex(stepName) + 1;
    };
    /**
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getStepsCount = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var stepsOrder = this.stepOptions.getStepsOrder();
        return stepsOrder.length;
    };
    /**
     * @private
     * @param {?} stepName
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getStepIndex = /**
     * @private
     * @param {?} stepName
     * @return {?}
     */
    function (stepName) {
        /** @type {?} */
        var index = this.steps
            .map((/**
         * @param {?} step
         * @return {?}
         */
        function (step) { return (step.id.includes(ROUTE_SEPARATOR) ? step.id.split(ROUTE_SEPARATOR)[0] : step.id); }))
            .findIndex((/**
         * @param {?} name
         * @return {?}
         */
        function (name) { return stepName === name; }));
        if (index === -1)
            throw new JoyrideError("The step with name: " + stepName + " does not exist in the step list.");
        return index;
    };
    /**
     * @private
     * @param {?} stepID
     * @return {?}
     */
    JoyrideStepsContainerService.prototype.getStepName = /**
     * @private
     * @param {?} stepID
     * @return {?}
     */
    function (stepID) {
        /** @type {?} */
        var stepName = stepID && stepID.includes(ROUTE_SEPARATOR) ? stepID.split(ROUTE_SEPARATOR)[0] : stepID;
        return stepName;
    };
    JoyrideStepsContainerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    JoyrideStepsContainerService.ctorParameters = function () { return [
        { type: JoyrideOptionsService },
        { type: LoggerService }
    ]; };
    return JoyrideStepsContainerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    JoyrideStepsContainerService.prototype.steps;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepsContainerService.prototype.tempSteps;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepsContainerService.prototype.currentStepIndex;
    /** @type {?} */
    JoyrideStepsContainerService.prototype.stepHasBeenModified;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepsContainerService.prototype.stepOptions;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepsContainerService.prototype.logger;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/dom.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DomRefService = /** @class */ (function () {
    function DomRefService(platformId) {
        this.platformId = platformId;
        this.fakeDocument = (/** @type {?} */ ({ body: {}, documentElement: {} }));
        this.fakeWindow = (/** @type {?} */ ({ document: this.fakeDocument, navigator: {} }));
    }
    /**
     * @return {?}
     */
    DomRefService.prototype.getNativeWindow = /**
     * @return {?}
     */
    function () {
        if (isPlatformBrowser(this.platformId))
            return window;
        else
            return this.fakeWindow;
    };
    /**
     * @return {?}
     */
    DomRefService.prototype.getNativeDocument = /**
     * @return {?}
     */
    function () {
        if (isPlatformBrowser(this.platformId))
            return document;
        else
            return this.fakeDocument;
    };
    DomRefService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    DomRefService.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return DomRefService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    DomRefService.prototype.fakeDocument;
    /**
     * @type {?}
     * @private
     */
    DomRefService.prototype.fakeWindow;
    /**
     * @type {?}
     * @private
     */
    DomRefService.prototype.platformId;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/templates.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TemplatesService = /** @class */ (function () {
    function TemplatesService() {
    }
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setPrevButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._prevButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getPrevButton = /**
     * @return {?}
     */
    function () {
        return this._prevButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setNextButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._nextButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getNextButton = /**
     * @return {?}
     */
    function () {
        return this._nextButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setDoneButton = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._doneButton = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getDoneButton = /**
     * @return {?}
     */
    function () {
        return this._doneButton;
    };
    /**
     * @param {?} template
     * @return {?}
     */
    TemplatesService.prototype.setCounter = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        this._counter = template;
    };
    /**
     * @return {?}
     */
    TemplatesService.prototype.getCounter = /**
     * @return {?}
     */
    function () {
        return this._counter;
    };
    TemplatesService.decorators = [
        { type: Injectable }
    ];
    return TemplatesService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._prevButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._nextButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._doneButton;
    /**
     * @type {?}
     * @private
     */
    TemplatesService.prototype._counter;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/joyride.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var NO_POSITION = 'NO_POSITION';
var JoyrideDirective = /** @class */ (function () {
    function JoyrideDirective(joyrideStepsContainer, viewContainerRef, domService, router, templateService, platformId) {
        this.joyrideStepsContainer = joyrideStepsContainer;
        this.viewContainerRef = viewContainerRef;
        this.domService = domService;
        this.router = router;
        this.templateService = templateService;
        this.platformId = platformId;
        this.stepPosition = NO_POSITION;
        this.prev = new EventEmitter();
        this.next = new EventEmitter();
        this.done = new EventEmitter();
        this.subscriptions = [];
        this.windowRef = this.domService.getNativeWindow();
        this.step = new JoyrideStep();
    }
    /**
     * @return {?}
     */
    JoyrideDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (!isPlatformBrowser(this.platformId))
            return;
        if (this.prevTemplate)
            this.templateService.setPrevButton(this.prevTemplate);
        if (this.nextTemplate)
            this.templateService.setNextButton(this.nextTemplate);
        if (this.doneTemplate)
            this.templateService.setDoneButton(this.doneTemplate);
        if (this.counterTemplate)
            this.templateService.setCounter(this.counterTemplate);
        this.step.position = this.stepPosition;
        this.step.targetViewContainer = this.viewContainerRef;
        this.setAsyncFields(this.step);
        this.step.stepContent = this.stepContent;
        this.step.stepContentParams = this.stepContentParams;
        this.step.nextClicked = this.next;
        this.step.prevCliked = this.prev;
        this.step.tourDone = this.done;
        if (!this.name)
            throw new JoyrideError("All the steps should have the 'joyrideStep' property set with a custom name.");
        this.step.name = this.name;
        this.step.route = this.router.url.substr(0, 1) === '/' ? this.router.url.substr(1) : this.router.url;
        this.step.transformCssStyle = this.windowRef.getComputedStyle(this.viewContainerRef.element.nativeElement).transform;
        this.step.isElementOrAncestorFixed =
            this.isElementFixed(this.viewContainerRef.element) ||
                this.isAncestorsFixed(this.viewContainerRef.element.nativeElement.parentElement);
        this.joyrideStepsContainer.addStep(this.step);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    JoyrideDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes['title'] || changes['text']) {
            this.setAsyncFields(this.step);
        }
    };
    /**
     * @private
     * @param {?} element
     * @return {?}
     */
    JoyrideDirective.prototype.isElementFixed = /**
     * @private
     * @param {?} element
     * @return {?}
     */
    function (element) {
        return this.windowRef.getComputedStyle(element.nativeElement).position === 'fixed';
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideDirective.prototype.setAsyncFields = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        if (this.title instanceof Observable) {
            this.subscriptions.push(this.title.subscribe((/**
             * @param {?} title
             * @return {?}
             */
            function (title) {
                step.title.next(title);
            })));
        }
        else {
            step.title.next(this.title);
        }
        if (this.text instanceof Observable) {
            this.subscriptions.push(this.text.subscribe((/**
             * @param {?} text
             * @return {?}
             */
            function (text) {
                step.text.next(text);
            })));
        }
        else {
            step.text.next(this.text);
        }
    };
    /**
     * @private
     * @param {?} nativeElement
     * @return {?}
     */
    JoyrideDirective.prototype.isAncestorsFixed = /**
     * @private
     * @param {?} nativeElement
     * @return {?}
     */
    function (nativeElement) {
        if (!nativeElement || !nativeElement.parentElement)
            return false;
        /** @type {?} */
        var isElementFixed = this.windowRef.getComputedStyle(nativeElement.parentElement).position === 'fixed';
        if (nativeElement.nodeName === 'BODY') {
            return isElementFixed;
        }
        if (isElementFixed)
            return true;
        else
            return this.isAncestorsFixed(nativeElement.parentElement);
    };
    /**
     * @return {?}
     */
    JoyrideDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) {
            sub.unsubscribe();
        }));
    };
    JoyrideDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'joyrideStep, [joyrideStep]'
                },] }
    ];
    /** @nocollapse */
    JoyrideDirective.ctorParameters = function () { return [
        { type: JoyrideStepsContainerService },
        { type: ViewContainerRef },
        { type: DomRefService },
        { type: Router },
        { type: TemplatesService },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    JoyrideDirective.propDecorators = {
        name: [{ type: Input, args: ['joyrideStep',] }],
        nextStep: [{ type: Input }],
        title: [{ type: Input }],
        text: [{ type: Input }],
        stepPosition: [{ type: Input }],
        stepContent: [{ type: Input }],
        stepContentParams: [{ type: Input }],
        prevTemplate: [{ type: Input }],
        nextTemplate: [{ type: Input }],
        doneTemplate: [{ type: Input }],
        counterTemplate: [{ type: Input }],
        prev: [{ type: Output }],
        next: [{ type: Output }],
        done: [{ type: Output }]
    };
    return JoyrideDirective;
}());
if (false) {
    /** @type {?} */
    JoyrideDirective.prototype.name;
    /** @type {?} */
    JoyrideDirective.prototype.nextStep;
    /** @type {?} */
    JoyrideDirective.prototype.title;
    /** @type {?} */
    JoyrideDirective.prototype.text;
    /** @type {?} */
    JoyrideDirective.prototype.stepPosition;
    /** @type {?} */
    JoyrideDirective.prototype.stepContent;
    /** @type {?} */
    JoyrideDirective.prototype.stepContentParams;
    /** @type {?} */
    JoyrideDirective.prototype.prevTemplate;
    /** @type {?} */
    JoyrideDirective.prototype.nextTemplate;
    /** @type {?} */
    JoyrideDirective.prototype.doneTemplate;
    /** @type {?} */
    JoyrideDirective.prototype.counterTemplate;
    /** @type {?} */
    JoyrideDirective.prototype.prev;
    /** @type {?} */
    JoyrideDirective.prototype.next;
    /** @type {?} */
    JoyrideDirective.prototype.done;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.windowRef;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.step;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.joyrideStepsContainer;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.viewContainerRef;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.domService;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.router;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.templateService;
    /**
     * @type {?}
     * @private
     */
    JoyrideDirective.prototype.platformId;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/document.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function IDocumentService() { }
if (false) {
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.getElementFixedTop = function (elementRef) { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.getElementFixedLeft = function (elementRef) { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.getElementAbsoluteTop = function (elementRef) { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.getElementAbsoluteLeft = function (elementRef) { };
    /**
     * @return {?}
     */
    IDocumentService.prototype.setDocumentHeight = function () { };
    /**
     * @return {?}
     */
    IDocumentService.prototype.getDocumentHeight = function () { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.isParentScrollable = function (elementRef) { };
    /**
     * @param {?} elementRef
     * @param {?} isElementFixed
     * @param {?} keywordToDiscard
     * @return {?}
     */
    IDocumentService.prototype.isElementBeyondOthers = function (elementRef, isElementFixed, keywordToDiscard) { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.scrollToTheTop = function (elementRef) { };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    IDocumentService.prototype.scrollToTheBottom = function (elementRef) { };
}
var DocumentService = /** @class */ (function () {
    function DocumentService(DOMService) {
        this.DOMService = DOMService;
        this.setDocumentHeight();
        if (!document.elementsFromPoint) {
            // IE 11 - Edge browsers
            document.elementsFromPoint = this.elementsFromPoint.bind(this);
        }
    }
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.getElementFixedTop = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        return elementRef.nativeElement.getBoundingClientRect().top;
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.getElementFixedLeft = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        return elementRef.nativeElement.getBoundingClientRect().left;
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.getElementAbsoluteTop = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        /** @type {?} */
        var scrollOffsets = this.getScrollOffsets();
        return (elementRef.nativeElement.getBoundingClientRect().top +
            scrollOffsets.y);
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.getElementAbsoluteLeft = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        /** @type {?} */
        var scrollOffsets = this.getScrollOffsets();
        return (elementRef.nativeElement.getBoundingClientRect().left +
            scrollOffsets.x);
    };
    /**
     * @return {?}
     */
    DocumentService.prototype.setDocumentHeight = /**
     * @return {?}
     */
    function () {
        this.documentHeight = this.calculateDocumentHeight();
    };
    /**
     * @return {?}
     */
    DocumentService.prototype.getDocumentHeight = /**
     * @return {?}
     */
    function () {
        return this.documentHeight;
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.isParentScrollable = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        return (this.getFirstScrollableParent(elementRef.nativeElement) !==
            this.DOMService.getNativeDocument().body);
    };
    /**
     * @param {?} elementRef
     * @param {?} isElementFixed
     * @param {?} keywordToDiscard
     * @return {?}
     */
    DocumentService.prototype.isElementBeyondOthers = /**
     * @param {?} elementRef
     * @param {?} isElementFixed
     * @param {?} keywordToDiscard
     * @return {?}
     */
    function (elementRef, isElementFixed, keywordToDiscard) {
        /** @type {?} */
        var x1 = isElementFixed
            ? this.getElementFixedLeft(elementRef)
            : this.getElementAbsoluteLeft(elementRef);
        /** @type {?} */
        var y1 = isElementFixed
            ? this.getElementFixedTop(elementRef)
            : this.getElementAbsoluteTop(elementRef);
        /** @type {?} */
        var x2 = x1 + elementRef.nativeElement.getBoundingClientRect().width - 1;
        /** @type {?} */
        var y2 = y1 + elementRef.nativeElement.getBoundingClientRect().height - 1;
        /** @type {?} */
        var elements1 = this.DOMService.getNativeDocument().elementsFromPoint(x1, y1);
        /** @type {?} */
        var elements2 = this.DOMService.getNativeDocument().elementsFromPoint(x2, y2);
        if (elements1.length === 0 && elements2.length === 0)
            return 1;
        if (this.getFirstElementWithoutKeyword(elements1, keywordToDiscard) !==
            elementRef.nativeElement ||
            this.getFirstElementWithoutKeyword(elements2, keywordToDiscard) !==
                elementRef.nativeElement) {
            return 2;
        }
        return 3;
    };
    /**
     * @param {?} elementRef
     * @param {?} isElementFixed
     * @return {?}
     */
    DocumentService.prototype.scrollIntoView = /**
     * @param {?} elementRef
     * @param {?} isElementFixed
     * @return {?}
     */
    function (elementRef, isElementFixed) {
        /** @type {?} */
        var firstScrollableParent = this.getFirstScrollableParent(elementRef.nativeElement);
        /** @type {?} */
        var top = isElementFixed
            ? this.getElementFixedTop(elementRef)
            : this.getElementAbsoluteTop(elementRef);
        if (firstScrollableParent !== this.DOMService.getNativeDocument().body) {
            if (firstScrollableParent.scrollTo) {
                firstScrollableParent.scrollTo(0, top - 150);
            }
            else {
                // IE 11 - Edge browsers
                firstScrollableParent.scrollTop = top - 150;
            }
        }
        else {
            this.DOMService.getNativeWindow().scrollTo(0, top - 150);
        }
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.scrollToTheTop = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        /** @type {?} */
        var firstScrollableParent = this.getFirstScrollableParent(elementRef.nativeElement);
        if (firstScrollableParent !== this.DOMService.getNativeDocument().body) {
            if (firstScrollableParent.scrollTo) {
                firstScrollableParent.scrollTo(0, 0);
            }
            else {
                // IE 11 - Edge browsers
                firstScrollableParent.scrollTop = 0;
            }
        }
        else {
            this.DOMService.getNativeWindow().scrollTo(0, 0);
        }
    };
    /**
     * @param {?} elementRef
     * @return {?}
     */
    DocumentService.prototype.scrollToTheBottom = /**
     * @param {?} elementRef
     * @return {?}
     */
    function (elementRef) {
        /** @type {?} */
        var firstScrollableParent = this.getFirstScrollableParent(elementRef.nativeElement);
        if (firstScrollableParent !== this.DOMService.getNativeDocument().body) {
            if (firstScrollableParent.scrollTo) {
                firstScrollableParent.scrollTo(0, this.DOMService.getNativeDocument().body.scrollHeight);
            }
            else {
                // IE 11 - Edge browsers
                firstScrollableParent.scrollTop =
                    firstScrollableParent.scrollHeight -
                        firstScrollableParent.clientHeight;
            }
        }
        else {
            this.DOMService.getNativeWindow().scrollTo(0, this.DOMService.getNativeDocument().body.scrollHeight);
        }
    };
    /**
     * @private
     * @param {?} node
     * @return {?}
     */
    DocumentService.prototype.getFirstScrollableParent = /**
     * @private
     * @param {?} node
     * @return {?}
     */
    function (node) {
        var _this = this;
        /** @type {?} */
        var regex = /(auto|scroll|overlay)/;
        /** @type {?} */
        var style = (/**
         * @param {?} node
         * @param {?} prop
         * @return {?}
         */
        function (node, prop) {
            return _this.DOMService.getNativeWindow()
                .getComputedStyle(node, null)
                .getPropertyValue(prop);
        });
        /** @type {?} */
        var scroll = (/**
         * @param {?} node
         * @return {?}
         */
        function (node) {
            return regex.test(style(node, 'overflow') +
                style(node, 'overflow-y') +
                style(node, 'overflow-x'));
        });
        /** @type {?} */
        var scrollparent = (/**
         * @param {?} node
         * @return {?}
         */
        function (node) {
            return !node || node === _this.DOMService.getNativeDocument().body
                ? _this.DOMService.getNativeDocument().body
                : scroll(node)
                    ? node
                    : scrollparent(node.parentNode);
        });
        return scrollparent(node);
    };
    /**
     * @private
     * @return {?}
     */
    DocumentService.prototype.calculateDocumentHeight = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var documentRef = this.DOMService.getNativeDocument();
        return Math.max(documentRef.body.scrollHeight, documentRef.documentElement.scrollHeight, documentRef.body.offsetHeight, documentRef.documentElement.offsetHeight, documentRef.body.clientHeight, documentRef.documentElement.clientHeight);
    };
    /**
     * @private
     * @return {?}
     */
    DocumentService.prototype.getScrollOffsets = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var winReference = this.DOMService.getNativeWindow();
        /** @type {?} */
        var docReference = this.DOMService.getNativeDocument();
        // This works for all browsers except IE versions 8 and before
        if (winReference.pageXOffset != null)
            return { x: winReference.pageXOffset, y: winReference.pageYOffset };
        // For IE (or any browser) in Standards mode
        if (docReference.compatMode == 'CSS1Compat')
            return {
                x: docReference.documentElement.scrollLeft,
                y: docReference.documentElement.scrollTop
            };
        // For browsers in Quirks mode
        return {
            x: docReference.body.scrollLeft,
            y: docReference.body.scrollTop
        };
    };
    /**
     * @private
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    DocumentService.prototype.elementsFromPoint = /**
     * @private
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    function (x, y) {
        /** @type {?} */
        var parents = [];
        /** @type {?} */
        var parent = void 0;
        do {
            /** @type {?} */
            var elem = this.DOMService.getNativeDocument().elementFromPoint(x, y);
            if (elem && parent !== elem) {
                parent = elem;
                parents.push(parent);
                parent.style.pointerEvents = 'none';
            }
            else {
                parent = false;
            }
        } while (parent);
        parents.forEach((/**
         * @param {?} parent
         * @return {?}
         */
        function (parent) {
            return (parent.style.pointerEvents = 'all');
        }));
        return parents;
    };
    /**
     * @private
     * @param {?} elements
     * @param {?} keyword
     * @return {?}
     */
    DocumentService.prototype.getFirstElementWithoutKeyword = /**
     * @private
     * @param {?} elements
     * @param {?} keyword
     * @return {?}
     */
    function (elements, keyword) {
        while (elements[0] &&
            elements[0].classList.toString().includes(keyword)) {
            elements.shift();
        }
        return elements[0];
    };
    DocumentService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    DocumentService.ctorParameters = function () { return [
        { type: DomRefService }
    ]; };
    return DocumentService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    DocumentService.prototype.documentHeight;
    /**
     * @type {?}
     * @private
     */
    DocumentService.prototype.DOMService;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/joyride-backdrop.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideBackdropService = /** @class */ (function () {
    function JoyrideBackdropService(documentService, optionsService, rendererFactory) {
        this.documentService = documentService;
        this.optionsService = optionsService;
        this.rendererFactory = rendererFactory;
        this.lastXScroll = 0;
        this.lastYScroll = 0;
        this.setRenderer();
    }
    /**
     * @private
     * @return {?}
     */
    JoyrideBackdropService.prototype.setRenderer = /**
     * @private
     * @return {?}
     */
    function () {
        this.renderer = this.rendererFactory.createRenderer(null, null);
    };
    /**
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.draw = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        this.elementRef = step.targetViewContainer;
        this.targetAbsoluteTop = this.getTargetTotalTop(step);
        this.targetAbsoluteLeft = this.getTargetTotalLeft(step);
        this.currentBackdropContainer = this.renderer.createElement('div');
        this.renderer.addClass(this.currentBackdropContainer, 'backdrop-container');
        this.renderer.setStyle(this.currentBackdropContainer, 'position', 'fixed');
        this.renderer.setStyle(this.currentBackdropContainer, 'top', '0px');
        this.renderer.setStyle(this.currentBackdropContainer, 'left', '0px');
        this.renderer.setStyle(this.currentBackdropContainer, 'width', '100%');
        this.renderer.setStyle(this.currentBackdropContainer, 'height', '100%');
        this.renderer.setStyle(this.currentBackdropContainer, 'z-index', '1000');
        this.renderer.setAttribute(this.currentBackdropContainer, 'id', 'backdrop-' + step.name);
        this.backdropContent = this.renderer.createElement('div');
        this.renderer.addClass(this.backdropContent, 'backdrop-content');
        this.renderer.setStyle(this.backdropContent, 'position', 'relative');
        this.renderer.setStyle(this.backdropContent, 'height', '100%');
        this.renderer.setStyle(this.backdropContent, 'display', 'flex');
        this.renderer.setStyle(this.backdropContent, 'flex-direction', 'column');
        this.renderer.appendChild(this.currentBackdropContainer, this.backdropContent);
        this.backdropTop = this.renderer.createElement('div');
        this.renderer.addClass(this.backdropTop, 'joyride-backdrop');
        this.renderer.addClass(this.backdropTop, 'backdrop-top');
        this.renderer.setStyle(this.backdropTop, 'width', '100%');
        this.renderer.setStyle(this.backdropTop, 'height', this.targetAbsoluteTop - this.lastYScroll + 'px');
        this.renderer.setStyle(this.backdropTop, 'flex-shrink', '0');
        this.renderer.setStyle(this.backdropTop, 'background-color', "rgba(" + this.optionsService.getBackdropColor() + ", 0.7)");
        this.renderer.appendChild(this.backdropContent, this.backdropTop);
        this.backdropMiddleContainer = this.renderer.createElement('div');
        this.renderer.addClass(this.backdropMiddleContainer, 'backdrop-middle-container');
        this.renderer.setStyle(this.backdropMiddleContainer, 'height', this.elementRef.element.nativeElement.offsetHeight + 'px');
        this.renderer.setStyle(this.backdropMiddleContainer, 'width', '100%');
        this.renderer.setStyle(this.backdropMiddleContainer, 'flex-shrink', '0');
        this.renderer.appendChild(this.backdropContent, this.backdropMiddleContainer);
        this.backdropMiddleContent = this.renderer.createElement('div');
        this.renderer.addClass(this.backdropMiddleContent, 'backdrop-middle-content');
        this.renderer.setStyle(this.backdropMiddleContent, 'display', 'flex');
        this.renderer.setStyle(this.backdropMiddleContent, 'width', '100%');
        this.renderer.setStyle(this.backdropMiddleContent, 'height', '100%');
        this.renderer.appendChild(this.backdropMiddleContainer, this.backdropMiddleContent);
        this.leftBackdrop = this.renderer.createElement('div');
        this.renderer.addClass(this.leftBackdrop, 'joyride-backdrop');
        this.renderer.addClass(this.leftBackdrop, 'backdrop-left');
        this.renderer.setStyle(this.leftBackdrop, 'flex-shrink', '0');
        this.renderer.setStyle(this.leftBackdrop, 'width', this.targetAbsoluteLeft - this.lastXScroll + 'px');
        this.renderer.setStyle(this.leftBackdrop, 'background-color', "rgba(" + this.optionsService.getBackdropColor() + ", 0.7)");
        this.renderer.appendChild(this.backdropMiddleContent, this.leftBackdrop);
        this.targetBackdrop = this.renderer.createElement('div');
        this.renderer.addClass(this.targetBackdrop, 'backdrop-target');
        this.renderer.setStyle(this.targetBackdrop, 'flex-shrink', '0');
        this.renderer.setStyle(this.targetBackdrop, 'width', this.elementRef.element.nativeElement.offsetWidth + 'px');
        this.renderer.appendChild(this.backdropMiddleContent, this.targetBackdrop);
        this.rightBackdrop = this.renderer.createElement('div');
        this.renderer.addClass(this.rightBackdrop, 'joyride-backdrop');
        this.renderer.addClass(this.rightBackdrop, 'backdrop-right');
        this.renderer.setStyle(this.rightBackdrop, 'width', '100%');
        this.renderer.setStyle(this.rightBackdrop, 'background-color', "rgba(" + this.optionsService.getBackdropColor() + ", 0.7)");
        this.renderer.appendChild(this.backdropMiddleContent, this.rightBackdrop);
        this.backdropBottom = this.renderer.createElement('div');
        this.renderer.addClass(this.backdropBottom, 'joyride-backdrop');
        this.renderer.addClass(this.backdropBottom, 'backdrop-bottom');
        this.renderer.setStyle(this.backdropBottom, 'width', '100%');
        this.renderer.setStyle(this.backdropBottom, 'height', '100%');
        this.renderer.setStyle(this.backdropBottom, 'background-color', "rgba(" + this.optionsService.getBackdropColor() + ", 0.7)");
        this.renderer.appendChild(this.backdropContent, this.backdropBottom);
        this.removeLastBackdrop();
        this.drawCurrentBackdrop();
        this.lastBackdropContainer = this.currentBackdropContainer;
    };
    /**
     * @return {?}
     */
    JoyrideBackdropService.prototype.remove = /**
     * @return {?}
     */
    function () {
        this.removeLastBackdrop();
    };
    /**
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.redrawTarget = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        this.targetAbsoluteLeft = this.getTargetTotalLeft(step);
        this.targetAbsoluteTop = this.getTargetTotalTop(step);
        this.handleVerticalScroll(step);
        this.handleHorizontalScroll(step);
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.getTargetTotalTop = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        /** @type {?} */
        var targetVC = step.targetViewContainer;
        return step.isElementOrAncestorFixed
            ? this.documentService.getElementFixedTop(targetVC.element)
            : this.documentService.getElementAbsoluteTop(targetVC.element);
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.getTargetTotalLeft = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        /** @type {?} */
        var targetVC = step.targetViewContainer;
        return step.isElementOrAncestorFixed
            ? this.documentService.getElementFixedLeft(targetVC.element)
            : this.documentService.getElementAbsoluteLeft(targetVC.element);
    };
    /**
     * @param {?} step
     * @param {?} scroll
     * @return {?}
     */
    JoyrideBackdropService.prototype.redraw = /**
     * @param {?} step
     * @param {?} scroll
     * @return {?}
     */
    function (step, scroll) {
        if (this.lastYScroll !== scroll.scrollY) {
            this.lastYScroll = scroll.scrollY;
            if (this.elementRef) {
                this.handleVerticalScroll(step);
            }
        }
        if (this.lastXScroll !== scroll.scrollX) {
            this.lastXScroll = scroll.scrollX;
            if (this.elementRef) {
                this.handleHorizontalScroll(step);
            }
        }
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.handleHorizontalScroll = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        /** @type {?} */
        var newBackdropLeftWidth = step.isElementOrAncestorFixed ? this.targetAbsoluteLeft : this.targetAbsoluteLeft - this.lastXScroll;
        if (newBackdropLeftWidth >= 0) {
            this.renderer.setStyle(this.leftBackdrop, 'width', newBackdropLeftWidth + 'px');
            this.renderer.setStyle(this.targetBackdrop, 'width', this.elementRef.element.nativeElement.offsetWidth + 'px');
        }
        else {
            this.handleTargetPartialWidth(newBackdropLeftWidth);
        }
    };
    /**
     * @private
     * @param {?} newBackdropLeftWidth
     * @return {?}
     */
    JoyrideBackdropService.prototype.handleTargetPartialWidth = /**
     * @private
     * @param {?} newBackdropLeftWidth
     * @return {?}
     */
    function (newBackdropLeftWidth) {
        this.renderer.setStyle(this.leftBackdrop, 'width', 0 + 'px');
        /** @type {?} */
        var visibleTargetWidth = this.elementRef.element.nativeElement.offsetWidth + newBackdropLeftWidth;
        if (visibleTargetWidth >= 0) {
            this.renderer.setStyle(this.targetBackdrop, 'width', visibleTargetWidth + 'px');
        }
        else {
            this.renderer.setStyle(this.targetBackdrop, 'width', 0 + 'px');
        }
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideBackdropService.prototype.handleVerticalScroll = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        /** @type {?} */
        var newBackdropTopHeight = step.isElementOrAncestorFixed ? this.targetAbsoluteTop : this.targetAbsoluteTop - this.lastYScroll;
        if (newBackdropTopHeight >= 0) {
            this.renderer.setStyle(this.backdropTop, 'height', newBackdropTopHeight + 'px');
            this.renderer.setStyle(this.backdropMiddleContainer, 'height', this.elementRef.element.nativeElement.offsetHeight + 'px');
        }
        else {
            this.handleTargetPartialHeight(newBackdropTopHeight);
        }
    };
    /**
     * @private
     * @param {?} newBackdropTopHeight
     * @return {?}
     */
    JoyrideBackdropService.prototype.handleTargetPartialHeight = /**
     * @private
     * @param {?} newBackdropTopHeight
     * @return {?}
     */
    function (newBackdropTopHeight) {
        this.renderer.setStyle(this.backdropTop, 'height', 0 + 'px');
        /** @type {?} */
        var visibleTargetHeight = this.elementRef.element.nativeElement.offsetHeight + newBackdropTopHeight;
        if (visibleTargetHeight >= 0) {
            this.renderer.setStyle(this.backdropMiddleContainer, 'height', visibleTargetHeight + 'px');
        }
        else {
            this.renderer.setStyle(this.backdropMiddleContainer, 'height', 0 + 'px');
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideBackdropService.prototype.removeLastBackdrop = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.lastBackdropContainer) {
            this.renderer.removeChild(document.body, this.lastBackdropContainer);
            this.lastBackdropContainer = undefined;
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideBackdropService.prototype.drawCurrentBackdrop = /**
     * @private
     * @return {?}
     */
    function () {
        this.renderer.appendChild(document.body, this.currentBackdropContainer);
    };
    JoyrideBackdropService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    JoyrideBackdropService.ctorParameters = function () { return [
        { type: DocumentService },
        { type: JoyrideOptionsService },
        { type: RendererFactory2 }
    ]; };
    return JoyrideBackdropService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.currentBackdropContainer;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.lastBackdropContainer;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.backdropContent;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.backdropTop;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.backdropBottom;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.backdropMiddleContainer;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.backdropMiddleContent;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.leftBackdrop;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.targetBackdrop;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.rightBackdrop;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.targetAbsoluteTop;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.targetAbsoluteLeft;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.lastXScroll;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.lastYScroll;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.documentService;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.optionsService;
    /**
     * @type {?}
     * @private
     */
    JoyrideBackdropService.prototype.rendererFactory;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/event-listener.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Scroll = /** @class */ (function () {
    function Scroll() {
    }
    return Scroll;
}());
if (false) {
    /** @type {?} */
    Scroll.prototype.scrollX;
    /** @type {?} */
    Scroll.prototype.scrollY;
}
var EventListenerService = /** @class */ (function () {
    function EventListenerService(rendererFactory, DOMService) {
        this.rendererFactory = rendererFactory;
        this.DOMService = DOMService;
        this.scrollEvent = new Subject();
        this.resizeEvent = new Subject();
        this.renderer = rendererFactory.createRenderer(null, null);
    }
    /**
     * @return {?}
     */
    EventListenerService.prototype.startListeningScrollEvents = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.scrollUnlisten = this.renderer.listen('document', 'scroll', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.scrollEvent.next({
                scrollX: _this.DOMService.getNativeWindow().pageXOffset,
                scrollY: _this.DOMService.getNativeWindow().pageYOffset
            });
        }));
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.startListeningResizeEvents = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeUnlisten = this.renderer.listen('window', 'resize', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.resizeEvent.next(evt);
        }));
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.stopListeningScrollEvents = /**
     * @return {?}
     */
    function () {
        this.scrollUnlisten();
    };
    /**
     * @return {?}
     */
    EventListenerService.prototype.stopListeningResizeEvents = /**
     * @return {?}
     */
    function () {
        this.resizeUnlisten();
    };
    EventListenerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventListenerService.ctorParameters = function () { return [
        { type: RendererFactory2 },
        { type: DomRefService }
    ]; };
    return EventListenerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.scrollUnlisten;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.resizeUnlisten;
    /** @type {?} */
    EventListenerService.prototype.scrollEvent;
    /** @type {?} */
    EventListenerService.prototype.resizeEvent;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.rendererFactory;
    /**
     * @type {?}
     * @private
     */
    EventListenerService.prototype.DOMService;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/step/joyride-step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var STEP_MIN_WIDTH = 200;
/** @type {?} */
var STEP_MAX_WIDTH = 400;
/** @type {?} */
var CUSTOM_STEP_MAX_WIDTH_VW = 90;
/** @type {?} */
var STEP_HEIGHT = 200;
/** @type {?} */
var ASPECT_RATIO = 1.212;
/** @type {?} */
var DEFAULT_DISTANCE_FROM_MARGIN_TOP = 2;
/** @type {?} */
var DEFAULT_DISTANCE_FROM_MARGIN_LEFT = 2;
/** @type {?} */
var DEFAULT_DISTANCE_FROM_MARGIN_BOTTOM = 5;
/** @type {?} */
var DEFAULT_DISTANCE_FROM_MARGIN_RIGHT = 5;
var JoyrideStepComponent = /** @class */ (function () {
    function JoyrideStepComponent(injector, stepsContainerService, eventListenerService, documentService, renderer, logger, optionsService, templateService) {
        this.injector = injector;
        this.stepsContainerService = stepsContainerService;
        this.eventListenerService = eventListenerService;
        this.documentService = documentService;
        this.renderer = renderer;
        this.logger = logger;
        this.optionsService = optionsService;
        this.templateService = templateService;
        this.stepWidth = STEP_MIN_WIDTH;
        this.stepHeight = STEP_HEIGHT;
        this.showArrow = true;
        this.arrowSize = ARROW_SIZE;
        this.subscriptions = [];
    }
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // Need to Inject here otherwise you will obtain a circular dependency
        this.joyrideStepService = this.injector.get(JoyrideStepService);
        this.documentHeight = this.documentService.getDocumentHeight();
        this.subscriptions.push(this.subscribeToResizeEvents());
        this.title = this.step.title.asObservable();
        this.text = this.step.text.asObservable();
        this.setCustomTemplates();
        this.setCustomTexts();
        this.counter = this.getCounter();
        this.isCounterVisible = this.optionsService.isCounterVisible();
        this.isPrevButtonVisible = this.optionsService.isPrevButtonVisible();
        this.themeColor = this.optionsService.getThemeColor();
        if (this.text)
            this.text.subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) { return _this.checkRedraw(val); }));
        if (this.title)
            this.title.subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) { return _this.checkRedraw(val); }));
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.isCustomized()) {
            this.renderer.setStyle(this.stepContainer.nativeElement, 'max-width', CUSTOM_STEP_MAX_WIDTH_VW + 'vw');
            this.updateStepDimensions();
        }
        else {
            this.renderer.setStyle(this.stepContainer.nativeElement, 'max-width', STEP_MAX_WIDTH + 'px');
            /** @type {?} */
            var dimensions = this.getDimensionsByAspectRatio(this.stepContainer.nativeElement.clientWidth, this.stepContainer.nativeElement.clientHeight, ASPECT_RATIO);
            dimensions = this.adjustDimensions(dimensions.width, dimensions.height);
            this.stepWidth = dimensions.width;
            this.stepHeight = dimensions.height;
            this.renderer.setStyle(this.stepContainer.nativeElement, 'width', this.stepWidth + 'px');
            this.renderer.setStyle(this.stepContainer.nativeElement, 'height', this.stepHeight + 'px');
        }
        this.drawStep();
    };
    /**
     * @private
     * @param {?} val
     * @return {?}
     */
    JoyrideStepComponent.prototype.checkRedraw = /**
     * @private
     * @param {?} val
     * @return {?}
     */
    function (val) {
        var _this = this;
        if (val != null) {
            // Need to wait that the change is rendered before redrawing
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.redrawStep();
            }), 2);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.isCustomized = /**
     * @private
     * @return {?}
     */
    function () {
        return (this.step.stepContent ||
            this.templateService.getCounter() ||
            this.templateService.getPrevButton() ||
            this.templateService.getNextButton() ||
            this.templateService.getDoneButton());
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setCustomTexts = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var customeTexts = this.optionsService.getCustomTexts();
        this.prevText = customeTexts.prev;
        this.nextText = customeTexts.next;
        this.doneText = customeTexts.done;
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.drawStep = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var position = this.step.isElementOrAncestorFixed
            ? 'fixed'
            : 'absolute';
        this.renderer.setStyle(this.stepHolder.nativeElement, 'position', position);
        this.renderer.setStyle(this.stepHolder.nativeElement, 'transform', this.step.transformCssStyle);
        this.targetWidth = this.step.targetViewContainer.element.nativeElement.getBoundingClientRect().width;
        this.targetHeight = this.step.targetViewContainer.element.nativeElement.getBoundingClientRect().height;
        this.targetAbsoluteLeft =
            position === 'fixed'
                ? this.documentService.getElementFixedLeft(this.step.targetViewContainer.element)
                : this.documentService.getElementAbsoluteLeft(this.step.targetViewContainer.element);
        this.targetAbsoluteTop =
            position === 'fixed'
                ? this.documentService.getElementFixedTop(this.step.targetViewContainer.element)
                : this.documentService.getElementAbsoluteTop(this.step.targetViewContainer.element);
        this.setStepStyle();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.getCounter = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var stepPosition = this.stepsContainerService.getStepNumber(this.step.name);
        /** @type {?} */
        var numberOfSteps = this.stepsContainerService.getStepsCount();
        this.counterData = { step: stepPosition, total: numberOfSteps };
        return stepPosition + '/' + numberOfSteps;
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setCustomTemplates = /**
     * @private
     * @return {?}
     */
    function () {
        this.customContent = this.step.stepContent;
        this.ctx = this.step.stepContentParams;
        this.customPrevButton = this.templateService.getPrevButton();
        this.customNextButton = this.templateService.getNextButton();
        this.customDoneButton = this.templateService.getDoneButton();
        this.customCounter = this.templateService.getCounter();
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.prev = /**
     * @return {?}
     */
    function () {
        this.joyrideStepService.prev();
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.next = /**
     * @return {?}
     */
    function () {
        this.joyrideStepService.next();
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.joyrideStepService.close();
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.isFirstStep = /**
     * @return {?}
     */
    function () {
        return this.stepsContainerService.getStepNumber(this.step.name) === 1;
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.isLastStep = /**
     * @return {?}
     */
    function () {
        return (this.stepsContainerService.getStepNumber(this.step.name) ===
            this.stepsContainerService.getStepsCount());
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStepStyle = /**
     * @private
     * @return {?}
     */
    function () {
        switch (this.step.position) {
            case 'top': {
                this.setStyleTop();
                break;
            }
            case 'bottom': {
                this.setStyleBottom();
                break;
            }
            case 'right': {
                this.setStyleRight();
                break;
            }
            case 'left': {
                this.setStyleLeft();
                break;
            }
            case 'center': {
                this.setStyleCenter();
                break;
            }
            default: {
                this.setStyleBottom();
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStyleTop = /**
     * @private
     * @return {?}
     */
    function () {
        this.stepsContainerService.updatePosition(this.step.name, 'top');
        this.topPosition =
            this.targetAbsoluteTop - DISTANCE_FROM_TARGET - this.stepHeight;
        this.stepAbsoluteTop =
            this.targetAbsoluteTop - DISTANCE_FROM_TARGET - this.stepHeight;
        this.arrowTopPosition = this.stepHeight;
        this.leftPosition =
            this.targetWidth / 2 - this.stepWidth / 2 + this.targetAbsoluteLeft;
        this.stepAbsoluteLeft =
            this.targetWidth / 2 - this.stepWidth / 2 + this.targetAbsoluteLeft;
        this.arrowLeftPosition = this.stepWidth / 2 - this.arrowSize;
        this.adjustLeftPosition();
        this.adjustRightPosition();
        this.arrowPosition = 'bottom';
        this.autofixTopPosition();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStyleRight = /**
     * @private
     * @return {?}
     */
    function () {
        this.stepsContainerService.updatePosition(this.step.name, 'right');
        this.topPosition =
            this.targetAbsoluteTop +
                this.targetHeight / 2 -
                this.stepHeight / 2;
        this.stepAbsoluteTop =
            this.targetAbsoluteTop +
                this.targetHeight / 2 -
                this.stepHeight / 2;
        this.arrowTopPosition = this.stepHeight / 2 - this.arrowSize;
        this.leftPosition =
            this.targetAbsoluteLeft + this.targetWidth + DISTANCE_FROM_TARGET;
        this.stepAbsoluteLeft =
            this.targetAbsoluteLeft + this.targetWidth + DISTANCE_FROM_TARGET;
        this.arrowLeftPosition = -this.arrowSize;
        this.adjustTopPosition();
        this.adjustBottomPosition();
        this.arrowPosition = 'left';
        this.autofixRightPosition();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStyleBottom = /**
     * @private
     * @return {?}
     */
    function () {
        this.stepsContainerService.updatePosition(this.step.name, 'bottom');
        this.topPosition =
            this.targetAbsoluteTop + this.targetHeight + DISTANCE_FROM_TARGET;
        this.stepAbsoluteTop =
            this.targetAbsoluteTop + this.targetHeight + DISTANCE_FROM_TARGET;
        this.arrowTopPosition = -this.arrowSize;
        this.arrowLeftPosition = this.stepWidth / 2 - this.arrowSize;
        this.leftPosition =
            this.targetWidth / 2 - this.stepWidth / 2 + this.targetAbsoluteLeft;
        this.stepAbsoluteLeft =
            this.targetWidth / 2 - this.stepWidth / 2 + this.targetAbsoluteLeft;
        this.adjustLeftPosition();
        this.adjustRightPosition();
        this.arrowPosition = 'top';
        this.autofixBottomPosition();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStyleLeft = /**
     * @private
     * @return {?}
     */
    function () {
        this.stepsContainerService.updatePosition(this.step.name, 'left');
        this.topPosition =
            this.targetAbsoluteTop +
                this.targetHeight / 2 -
                this.stepHeight / 2;
        this.stepAbsoluteTop =
            this.targetAbsoluteTop +
                this.targetHeight / 2 -
                this.stepHeight / 2;
        this.arrowTopPosition = this.stepHeight / 2 - this.arrowSize;
        this.leftPosition =
            this.targetAbsoluteLeft - this.stepWidth - DISTANCE_FROM_TARGET;
        this.stepAbsoluteLeft =
            this.targetAbsoluteLeft - this.stepWidth - DISTANCE_FROM_TARGET;
        this.arrowLeftPosition = this.stepWidth;
        this.adjustTopPosition();
        this.adjustBottomPosition();
        this.arrowPosition = 'right';
        this.autofixLeftPosition();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.setStyleCenter = /**
     * @private
     * @return {?}
     */
    function () {
        this.renderer.setStyle(this.stepHolder.nativeElement, 'position', 'fixed');
        this.renderer.setStyle(this.stepHolder.nativeElement, 'top', '50%');
        this.renderer.setStyle(this.stepHolder.nativeElement, 'left', '50%');
        this.updateStepDimensions();
        this.renderer.setStyle(this.stepHolder.nativeElement, 'transform', "translate(-" + this.stepWidth / 2 + "px, -" + this.stepHeight / 2 + "px)");
        this.showArrow = false;
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.adjustLeftPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.leftPosition < 0) {
            this.arrowLeftPosition =
                this.arrowLeftPosition +
                    this.leftPosition -
                    DEFAULT_DISTANCE_FROM_MARGIN_LEFT;
            this.leftPosition = DEFAULT_DISTANCE_FROM_MARGIN_LEFT;
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.adjustRightPosition = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var currentWindowWidth = document.body.clientWidth;
        if (this.stepAbsoluteLeft + this.stepWidth > currentWindowWidth) {
            /** @type {?} */
            var newLeftPos = this.leftPosition -
                (this.stepAbsoluteLeft +
                    this.stepWidth +
                    DEFAULT_DISTANCE_FROM_MARGIN_RIGHT -
                    currentWindowWidth);
            /** @type {?} */
            var deltaLeftPosition = newLeftPos - this.leftPosition;
            this.leftPosition = newLeftPos;
            this.arrowLeftPosition = this.arrowLeftPosition - deltaLeftPosition;
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.adjustTopPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.stepAbsoluteTop < 0) {
            this.arrowTopPosition =
                this.arrowTopPosition +
                    this.topPosition -
                    DEFAULT_DISTANCE_FROM_MARGIN_TOP;
            this.topPosition = DEFAULT_DISTANCE_FROM_MARGIN_TOP;
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.adjustBottomPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.stepAbsoluteTop + this.stepHeight > this.documentHeight) {
            /** @type {?} */
            var newTopPos = this.topPosition -
                (this.stepAbsoluteTop +
                    this.stepHeight +
                    DEFAULT_DISTANCE_FROM_MARGIN_BOTTOM -
                    this.documentHeight);
            /** @type {?} */
            var deltaTopPosition = newTopPos - this.topPosition;
            this.topPosition = newTopPos;
            this.arrowTopPosition = this.arrowTopPosition - deltaTopPosition;
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.autofixTopPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.positionAlreadyFixed) {
            this.logger.warn('No step positions found for this step. The step will be centered.');
        }
        else if (this.targetAbsoluteTop - this.stepHeight - this.arrowSize <
            0) {
            this.positionAlreadyFixed = true;
            this.setStyleRight();
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.autofixRightPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.targetAbsoluteLeft +
            this.targetWidth +
            this.stepWidth +
            this.arrowSize >
            document.body.clientWidth) {
            this.setStyleBottom();
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.autofixBottomPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.targetAbsoluteTop +
            this.stepHeight +
            this.arrowSize +
            this.targetHeight >
            this.documentHeight) {
            this.setStyleLeft();
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.autofixLeftPosition = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.targetAbsoluteLeft - this.stepWidth - this.arrowSize < 0) {
            this.setStyleTop();
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.subscribeToResizeEvents = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        return this.eventListenerService.resizeEvent.subscribe((/**
         * @return {?}
         */
        function () {
            _this.redrawStep();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.redrawStep = /**
     * @private
     * @return {?}
     */
    function () {
        this.updateStepDimensions();
        this.drawStep();
    };
    /**
     * @private
     * @param {?} width
     * @param {?} height
     * @param {?} aspectRatio
     * @return {?}
     */
    JoyrideStepComponent.prototype.getDimensionsByAspectRatio = /**
     * @private
     * @param {?} width
     * @param {?} height
     * @param {?} aspectRatio
     * @return {?}
     */
    function (width, height, aspectRatio) {
        /** @type {?} */
        var calcHeight = (width + height) / (1 + aspectRatio);
        /** @type {?} */
        var calcWidth = calcHeight * aspectRatio;
        return {
            width: calcWidth,
            height: calcHeight
        };
    };
    /**
     * @private
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    JoyrideStepComponent.prototype.adjustDimensions = /**
     * @private
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    function (width, height) {
        /** @type {?} */
        var area = width * height;
        /** @type {?} */
        var newWidth = width;
        /** @type {?} */
        var newHeight = height;
        if (width > STEP_MAX_WIDTH) {
            newWidth = STEP_MAX_WIDTH;
            newHeight = area / newWidth;
        }
        else if (width < STEP_MIN_WIDTH) {
            newWidth = STEP_MIN_WIDTH;
            newHeight = STEP_MIN_WIDTH / ASPECT_RATIO;
        }
        return {
            width: newWidth,
            height: newHeight
        };
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepComponent.prototype.updateStepDimensions = /**
     * @private
     * @return {?}
     */
    function () {
        this.stepWidth = this.stepContainer.nativeElement.clientWidth;
        this.stepHeight = this.stepContainer.nativeElement.clientHeight;
    };
    /**
     * @return {?}
     */
    JoyrideStepComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} subscription
         * @return {?}
         */
        function (subscription) {
            subscription.unsubscribe();
        }));
    };
    JoyrideStepComponent.decorators = [
        { type: Component, args: [{
                    selector: 'joyride-step',
                    template: "<div #stepHolder class=\"joyride-step__holder\" [id]=\"'joyride-step-' + step.name\" [style.top.px]=\"topPosition\" [style.left.px]=\"leftPosition\">\r\n    <joyride-arrow *ngIf=\"showArrow\" class=\"joyride-step__arrow\" [position]=\"arrowPosition\" [style.top.px]=\"arrowTopPosition\"\r\n        [style.left.px]=\"arrowLeftPosition\"></joyride-arrow>\r\n    <div #stepContainer class=\"joyride-step__container\">\r\n        <joy-close-button class=\"joyride-step__close\" (click)=\"close()\"></joy-close-button>\r\n        <div class=\"joyride-step__header\">\r\n            <div class=\"joyride-step__title\" [style.color]=\"themeColor\">{{ title | async }}</div>\r\n        </div>\r\n        <div class=\"joyride-step__body\">\r\n            <ng-container *ngTemplateOutlet=\"customContent ? customContent : defaultContent; context: ctx\"></ng-container>\r\n            <ng-template #defaultContent>\r\n                {{ text | async }}\r\n            </ng-template>\r\n        </div>\r\n        <div class=\"joyride-step__footer\">\r\n            <div *ngIf=\"isCounterVisible\" class=\"joyride-step__counter-container\">\r\n                <ng-container *ngTemplateOutlet=\"customCounter ? customCounter : defaultCounter; context: counterData\"></ng-container>\r\n                <ng-template #defaultCounter>\r\n                    <div class=\"joyride-step__counter\">{{ counter }}</div>\r\n                </ng-template>\r\n            </div>\r\n            <div class=\"joyride-step__buttons-container\">\r\n                <div class=\"joyride-step__prev-container joyride-step__button\" *ngIf=\"isPrevButtonVisible && !isFirstStep()\" (click)=\"prev()\">\r\n                    <ng-container *ngTemplateOutlet=\"customPrevButton ? customPrevButton : defaultPrevButton\"></ng-container>\r\n                    <ng-template #defaultPrevButton>\r\n                        <joyride-button class=\"joyride-step__prev-button\" [color]=\"themeColor\">{{ prevText | async }}</joyride-button>\r\n                    </ng-template>\r\n                </div>\r\n                <div class=\"joyride-step__next-container joyride-step__button\" *ngIf=\"!isLastStep(); else doneButton\" (click)=\"next()\">\r\n                    <ng-container *ngTemplateOutlet=\"customNextButton ? customNextButton : defaulNextButton\"></ng-container>\r\n                    <ng-template #defaulNextButton>\r\n                        <joyride-button [color]=\"themeColor\">{{ nextText | async }}</joyride-button>\r\n                    </ng-template>\r\n                </div>\r\n                <ng-template #doneButton>\r\n                    <div class=\"joyride-step__done-container joyride-step__button\" (click)=\"close()\">\r\n                        <ng-container *ngTemplateOutlet=\"customDoneButton ? customDoneButton : defaultDoneButton\"></ng-container>\r\n                        <ng-template #defaultDoneButton>\r\n                            <joyride-button class=\"joyride-step__done-button\" [color]=\"themeColor\">{{ doneText | async }}</joyride-button>\r\n                        </ng-template>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".joyride-step__holder{position:absolute;font-family:Arial,Helvetica,sans-serif;font-size:16px;z-index:1001}.joyride-step__arrow{position:absolute;left:40px;z-index:1002}.joyride-step__container{box-sizing:border-box;position:relative;color:#000;background-color:#fff;display:flex;flex-direction:column;justify-content:space-between;padding:10px;box-shadow:0 0 30px 1px #000}.joyride-step__header{display:flex;align-items:center;padding:8px}.joyride-step__title{font-weight:700;font-size:20px}.joyride-step__close{position:absolute;right:10px;top:10px;width:14px;height:14px;cursor:pointer}.joyride-step__body{text-align:left;padding:10px 8px}.joyride-step__footer{display:flex;flex-direction:row;justify-content:space-between;align-items:center;padding-left:8px}.joyride-step__buttons-container{display:flex;flex-direction:row}.joyride-step__button:first-child{margin-right:2.5px}.joyride-step__button:last-child{margin-left:2.5px}.joyride-step__counter{font-weight:700;font-size:14px}.joyride-step__counter-container{margin-right:10px}"]
                }] }
    ];
    /** @nocollapse */
    JoyrideStepComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: JoyrideStepsContainerService },
        { type: EventListenerService },
        { type: DocumentService },
        { type: Renderer2 },
        { type: LoggerService },
        { type: JoyrideOptionsService },
        { type: TemplatesService }
    ]; };
    JoyrideStepComponent.propDecorators = {
        step: [{ type: Input }],
        stepHolder: [{ type: ViewChild, args: ['stepHolder', { static: true },] }],
        stepContainer: [{ type: ViewChild, args: ['stepContainer', { static: true },] }]
    };
    return JoyrideStepComponent;
}());
if (false) {
    /** @type {?} */
    JoyrideStepComponent.prototype.stepWidth;
    /** @type {?} */
    JoyrideStepComponent.prototype.stepHeight;
    /** @type {?} */
    JoyrideStepComponent.prototype.leftPosition;
    /** @type {?} */
    JoyrideStepComponent.prototype.topPosition;
    /** @type {?} */
    JoyrideStepComponent.prototype.showArrow;
    /** @type {?} */
    JoyrideStepComponent.prototype.arrowPosition;
    /** @type {?} */
    JoyrideStepComponent.prototype.arrowLeftPosition;
    /** @type {?} */
    JoyrideStepComponent.prototype.arrowTopPosition;
    /** @type {?} */
    JoyrideStepComponent.prototype.title;
    /** @type {?} */
    JoyrideStepComponent.prototype.text;
    /** @type {?} */
    JoyrideStepComponent.prototype.counter;
    /** @type {?} */
    JoyrideStepComponent.prototype.isCounterVisible;
    /** @type {?} */
    JoyrideStepComponent.prototype.isPrevButtonVisible;
    /** @type {?} */
    JoyrideStepComponent.prototype.themeColor;
    /** @type {?} */
    JoyrideStepComponent.prototype.customContent;
    /** @type {?} */
    JoyrideStepComponent.prototype.customPrevButton;
    /** @type {?} */
    JoyrideStepComponent.prototype.customNextButton;
    /** @type {?} */
    JoyrideStepComponent.prototype.customDoneButton;
    /** @type {?} */
    JoyrideStepComponent.prototype.customCounter;
    /** @type {?} */
    JoyrideStepComponent.prototype.counterData;
    /** @type {?} */
    JoyrideStepComponent.prototype.ctx;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.arrowSize;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.stepAbsoluteLeft;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.stepAbsoluteTop;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.targetWidth;
    /** @type {?} */
    JoyrideStepComponent.prototype.targetHeight;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.targetAbsoluteLeft;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.targetAbsoluteTop;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.subscriptions;
    /** @type {?} */
    JoyrideStepComponent.prototype.joyrideStepService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.positionAlreadyFixed;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.documentHeight;
    /** @type {?} */
    JoyrideStepComponent.prototype.prevText;
    /** @type {?} */
    JoyrideStepComponent.prototype.nextText;
    /** @type {?} */
    JoyrideStepComponent.prototype.doneText;
    /** @type {?} */
    JoyrideStepComponent.prototype.step;
    /** @type {?} */
    JoyrideStepComponent.prototype.stepHolder;
    /** @type {?} */
    JoyrideStepComponent.prototype.stepContainer;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.stepsContainerService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.eventListenerService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.documentService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.logger;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.optionsService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepComponent.prototype.templateService;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/arrow/arrow.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideArrowComponent = /** @class */ (function () {
    function JoyrideArrowComponent() {
        this.position = 'top';
    }
    JoyrideArrowComponent.decorators = [
        { type: Component, args: [{
                    selector: 'joyride-arrow',
                    template: "<div [class.joyride-arrow__top]=\"position == 'top'\"\r\n     [class.joyride-arrow__bottom]=\"position == 'bottom'\"\r\n     [class.joyride-arrow__left]=\"position == 'left'\"\r\n     [class.joyride-arrow__right]=\"position == 'right'\">\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".joyride-arrow__top{border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:11px solid #fff}.joyride-arrow__bottom{border-left:11px solid transparent;border-right:11px solid transparent;border-top:11px solid #fff}.joyride-arrow__right{border-left:11px solid #fff;border-bottom:11px solid transparent;border-top:11px solid transparent}.joyride-arrow__left{border-right:11px solid #fff;border-top:11px solid transparent;border-bottom:11px solid transparent}"]
                }] }
    ];
    JoyrideArrowComponent.propDecorators = {
        position: [{ type: Input }]
    };
    return JoyrideArrowComponent;
}());
if (false) {
    /** @type {?} */
    JoyrideArrowComponent.prototype.position;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/button/button.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideButtonComponent = /** @class */ (function () {
    function JoyrideButtonComponent() {
        this.clicked = new EventEmitter();
    }
    /**
     * @return {?}
     */
    JoyrideButtonComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.clicked.emit();
    };
    JoyrideButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'joyride-button',
                    template: "<button (mouseleave)=\"hover=false\" (mouseover)=\"hover=true\"\r\n    [ngStyle]=\"{'background-color': hover ? '#fff' : color, \r\n                'color': hover ? color : '#fff',\r\n                'border-color' : hover ? color : 'transparent'}\"\r\n    class=\"joyride-button\" (click)=\"onClick()\">\r\n    <ng-content></ng-content>\r\n</button>",
                    styles: [".joyride-button{text-transform:uppercase;border:2px solid transparent;outline:0;padding:6px 12px;font-size:12px;font-weight:700;color:#fff;background-color:#3b5560;cursor:pointer}.joyride-button:hover{color:#3b5560;border:2px solid #3b5560;background-color:#fff}"]
                }] }
    ];
    JoyrideButtonComponent.propDecorators = {
        color: [{ type: Input }],
        clicked: [{ type: Output }]
    };
    return JoyrideButtonComponent;
}());
if (false) {
    /** @type {?} */
    JoyrideButtonComponent.prototype.hover;
    /** @type {?} */
    JoyrideButtonComponent.prototype.color;
    /** @type {?} */
    JoyrideButtonComponent.prototype.clicked;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/close-button/close-button.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideCloseButtonComponent = /** @class */ (function () {
    function JoyrideCloseButtonComponent() {
    }
    JoyrideCloseButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'joy-close-button',
                    template: "<svg viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\">\n                <line x1=\"1\" y1=\"24\" \n                    x2=\"24\" y2=\"1\" \n                    stroke=\"black\" \n                    stroke-width=\"3\"/>\n                <line x1=\"1\" y1=\"1\" \n                    x2=\"24\" y2=\"24\" \n                    stroke=\"black\" \n                    stroke-width=\"3\"/>\n            </svg>"
                }] }
    ];
    return JoyrideCloseButtonComponent;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/step-drawer.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var StepDrawerService = /** @class */ (function () {
    function StepDrawerService(componentFactoryResolver, appRef, injector) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.appRef = appRef;
        this.injector = injector;
        this.refMap = {};
    }
    /**
     * @param {?} step
     * @return {?}
     */
    StepDrawerService.prototype.draw = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        // 1. Create a component reference from the component
        /** @type {?} */
        var ref = this.componentFactoryResolver
            .resolveComponentFactory(JoyrideStepComponent)
            .create(this.injector);
        // 2. Attach component to the appRef so that it's inside the ng component tree
        this.appRef.attachView(ref.hostView);
        // 3. Get DOM element from component
        /** @type {?} */
        var domElem = (/** @type {?} */ (((/** @type {?} */ (ref.hostView)))
            .rootNodes[0]));
        // 4. Append DOM element to the body
        document.body.appendChild(domElem);
        /** @type {?} */
        var instance = ref.instance;
        instance.step = step;
        ref.changeDetectorRef.detectChanges();
        step.stepInstance = instance;
        this.refMap[step.name] = ref;
    };
    /**
     * @param {?} step
     * @return {?}
     */
    StepDrawerService.prototype.remove = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        this.appRef.detachView(this.refMap[step.name].hostView);
        this.refMap[step.name].destroy();
    };
    StepDrawerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    StepDrawerService.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: ApplicationRef },
        { type: Injector }
    ]; };
    return StepDrawerService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    StepDrawerService.prototype.refMap;
    /**
     * @type {?}
     * @private
     */
    StepDrawerService.prototype.componentFactoryResolver;
    /**
     * @type {?}
     * @private
     */
    StepDrawerService.prototype.appRef;
    /**
     * @type {?}
     * @private
     */
    StepDrawerService.prototype.injector;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/joyride-step.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var SCROLLBAR_SIZE = 20;
/** @type {?} */
var DISTANCE_FROM_TARGET = 15;
/** @type {?} */
var ARROW_SIZE = 10;
/**
 * @record
 */
function IJoyrideStepService() { }
if (false) {
    /**
     * @return {?}
     */
    IJoyrideStepService.prototype.startTour = function () { };
    /**
     * @return {?}
     */
    IJoyrideStepService.prototype.close = function () { };
    /**
     * @return {?}
     */
    IJoyrideStepService.prototype.prev = function () { };
    /**
     * @return {?}
     */
    IJoyrideStepService.prototype.next = function () { };
}
var JoyrideStepService = /** @class */ (function () {
    function JoyrideStepService(backDropService, eventListener, stepsContainerService, documentService, DOMService, stepDrawerService, optionsService, router, logger) {
        this.backDropService = backDropService;
        this.eventListener = eventListener;
        this.stepsContainerService = stepsContainerService;
        this.documentService = documentService;
        this.DOMService = DOMService;
        this.stepDrawerService = stepDrawerService;
        this.optionsService = optionsService;
        this.router = router;
        this.logger = logger;
        this.winTopPosition = 0;
        this.winBottomPosition = 0;
        this.stepsObserver = new ReplaySubject();
        this.initViewportPositions();
        this.subscribeToScrollEvents();
        this.subscribeToResizeEvents();
    }
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.initViewportPositions = /**
     * @private
     * @return {?}
     */
    function () {
        this.winTopPosition = 0;
        this.winBottomPosition = this.DOMService.getNativeWindow().innerHeight - SCROLLBAR_SIZE;
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.subscribeToScrollEvents = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.eventListener.startListeningScrollEvents();
        this.eventListener.scrollEvent.subscribe((/**
         * @param {?} scroll
         * @return {?}
         */
        function (scroll) {
            _this.winTopPosition = scroll.scrollY;
            _this.winBottomPosition = _this.winTopPosition + _this.DOMService.getNativeWindow().innerHeight - SCROLLBAR_SIZE;
            if (_this.currentStep)
                _this.backDropService.redraw(_this.currentStep, scroll);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.subscribeToResizeEvents = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.eventListener.resizeEvent.subscribe((/**
         * @return {?}
         */
        function () {
            if (_this.currentStep)
                _this.backDropService.redrawTarget(_this.currentStep);
        }));
    };
    /**
     * @private
     * @param {?} step
     * @return {?}
     */
    JoyrideStepService.prototype.drawStep = /**
     * @private
     * @param {?} step
     * @return {?}
     */
    function (step) {
        step.position = step.position === NO_POSITION ? this.optionsService.getStepDefaultPosition() : step.position;
        this.stepDrawerService.draw(step);
    };
    /**
     * @return {?}
     */
    JoyrideStepService.prototype.startTour = /**
     * @return {?}
     */
    function () {
        this.stepsObserver = new ReplaySubject();
        this.stepsContainerService.init();
        this.documentService.setDocumentHeight();
        this.tryShowStep(StepActionType.NEXT);
        this.eventListener.startListeningResizeEvents();
        this.subscribeToStepsUpdates();
        return this.stepsObserver.asObservable();
    };
    /**
     * @return {?}
     */
    JoyrideStepService.prototype.close = /**
     * @return {?}
     */
    function () {
        this.removeCurrentStep();
        this.notifyTourIsFinished();
        this.DOMService.getNativeWindow().scrollTo(0, 0);
        this.eventListener.stopListeningResizeEvents();
        this.backDropService.remove();
    };
    /**
     * @return {?}
     */
    JoyrideStepService.prototype.prev = /**
     * @return {?}
     */
    function () {
        this.removeCurrentStep();
        this.currentStep.prevCliked.emit();
        this.tryShowStep(StepActionType.PREV);
    };
    /**
     * @return {?}
     */
    JoyrideStepService.prototype.next = /**
     * @return {?}
     */
    function () {
        this.removeCurrentStep();
        this.currentStep.nextClicked.emit();
        this.tryShowStep(StepActionType.NEXT);
    };
    /**
     * @private
     * @param {?} action
     * @return {?}
     */
    JoyrideStepService.prototype.navigateToStepPage = /**
     * @private
     * @param {?} action
     * @return {?}
     */
    function (action) {
        /** @type {?} */
        var stepRoute = this.stepsContainerService.getStepRoute(action);
        if (stepRoute) {
            this.router.navigate([stepRoute]);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.subscribeToStepsUpdates = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.stepsContainerService.stepHasBeenModified.subscribe((/**
         * @param {?} updatedStep
         * @return {?}
         */
        function (updatedStep) {
            if (_this.currentStep && _this.currentStep.name === updatedStep.name) {
                _this.currentStep = updatedStep;
            }
        }));
    };
    /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    JoyrideStepService.prototype.tryShowStep = /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    function (actionType) {
        var _this = this;
        this.navigateToStepPage(actionType);
        /** @type {?} */
        var timeout = this.optionsService.getWaitingTime();
        if (timeout > 100)
            this.backDropService.remove();
        setTimeout((/**
         * @return {?}
         */
        function () {
            try {
                _this.showStep(actionType);
            }
            catch (error) {
                if (error instanceof JoyrideStepDoesNotExist) {
                    _this.tryShowStep(actionType);
                }
                else if (error instanceof JoyrideStepOutOfRange) {
                    _this.logger.error('Forcing the tour closure: First or Last step not found in the DOM.');
                    _this.close();
                }
                else {
                    throw new Error(error);
                }
            }
        }), timeout);
    };
    /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    JoyrideStepService.prototype.showStep = /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    function (actionType) {
        this.currentStep = this.stepsContainerService.get(actionType);
        if (this.currentStep == null)
            throw new JoyrideStepDoesNotExist('');
        // Scroll the element to get it visible if it's in a scrollable element
        this.scrollIfElementBeyondOtherElements();
        this.backDropService.draw(this.currentStep);
        this.drawStep(this.currentStep);
        this.scrollIfStepAndTargetAreNotVisible();
        this.notifyStepClicked(actionType);
    };
    /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    JoyrideStepService.prototype.notifyStepClicked = /**
     * @private
     * @param {?} actionType
     * @return {?}
     */
    function (actionType) {
        /** @type {?} */
        var stepInfo = {
            number: this.stepsContainerService.getStepNumber(this.currentStep.name),
            name: this.currentStep.name,
            route: this.currentStep.route,
            actionType: actionType
        };
        this.stepsObserver.next(stepInfo);
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.notifyTourIsFinished = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.currentStep)
            this.currentStep.tourDone.emit();
        this.stepsObserver.complete();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.removeCurrentStep = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.currentStep)
            this.stepDrawerService.remove(this.currentStep);
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.scrollIfStepAndTargetAreNotVisible = /**
     * @private
     * @return {?}
     */
    function () {
        this.scrollWhenTargetOrStepAreHiddenBottom();
        this.scrollWhenTargetOrStepAreHiddenTop();
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.scrollWhenTargetOrStepAreHiddenBottom = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var totalTargetBottom = this.getMaxTargetAndStepBottomPosition();
        if (totalTargetBottom > this.winBottomPosition) {
            this.DOMService.getNativeWindow().scrollBy(0, totalTargetBottom - this.winBottomPosition);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.scrollWhenTargetOrStepAreHiddenTop = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var totalTargetTop = this.getMaxTargetAndStepTopPosition();
        if (totalTargetTop < this.winTopPosition) {
            this.DOMService.getNativeWindow().scrollBy(0, totalTargetTop - this.winTopPosition);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.getMaxTargetAndStepBottomPosition = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var targetAbsoluteTop = this.documentService.getElementAbsoluteTop(this.currentStep.targetViewContainer.element);
        if (this.currentStep.position === 'top') {
            return targetAbsoluteTop + this.currentStep.stepInstance.targetHeight;
        }
        else if (this.currentStep.position === 'bottom') {
            return (targetAbsoluteTop +
                this.currentStep.stepInstance.targetHeight +
                this.currentStep.stepInstance.stepHeight +
                ARROW_SIZE +
                DISTANCE_FROM_TARGET);
        }
        else if (this.currentStep.position === 'right' || this.currentStep.position === 'left') {
            return Math.max(targetAbsoluteTop + this.currentStep.stepInstance.targetHeight, targetAbsoluteTop + this.currentStep.stepInstance.targetHeight / 2 + this.currentStep.stepInstance.stepHeight / 2);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.getMaxTargetAndStepTopPosition = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var targetAbsoluteTop = this.documentService.getElementAbsoluteTop(this.currentStep.targetViewContainer.element);
        if (this.currentStep.position === 'top') {
            return targetAbsoluteTop - (this.currentStep.stepInstance.stepHeight + ARROW_SIZE + DISTANCE_FROM_TARGET);
        }
        else if (this.currentStep.position === 'bottom') {
            return targetAbsoluteTop;
        }
        else if (this.currentStep.position === 'right' || this.currentStep.position === 'left') {
            return Math.min(targetAbsoluteTop, targetAbsoluteTop + this.currentStep.stepInstance.targetHeight / 2 - this.currentStep.stepInstance.stepHeight / 2);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.scrollIfElementBeyondOtherElements = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.isElementBeyondOthers() === 2) {
            this.documentService.scrollToTheTop(this.currentStep.targetViewContainer.element);
        }
        if (this.isElementBeyondOthers() === 2) {
            this.documentService.scrollToTheBottom(this.currentStep.targetViewContainer.element);
        }
        if (this.isElementBeyondOthers() === 1 && this.documentService.isParentScrollable(this.currentStep.targetViewContainer.element)) {
            this.documentService.scrollIntoView(this.currentStep.targetViewContainer.element, this.currentStep.isElementOrAncestorFixed);
        }
        if (this.isElementBeyondOthers() === 1 && this.documentService.isParentScrollable(this.currentStep.targetViewContainer.element)) {
            this.currentStep.targetViewContainer.element.nativeElement.scrollIntoView();
        }
    };
    /**
     * @private
     * @return {?}
     */
    JoyrideStepService.prototype.isElementBeyondOthers = /**
     * @private
     * @return {?}
     */
    function () {
        return this.documentService.isElementBeyondOthers(this.currentStep.targetViewContainer.element, this.currentStep.isElementOrAncestorFixed, 'backdrop');
    };
    JoyrideStepService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    JoyrideStepService.ctorParameters = function () { return [
        { type: JoyrideBackdropService },
        { type: EventListenerService },
        { type: JoyrideStepsContainerService },
        { type: DocumentService },
        { type: DomRefService },
        { type: StepDrawerService },
        { type: JoyrideOptionsService },
        { type: Router },
        { type: LoggerService }
    ]; };
    return JoyrideStepService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.currentStep;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.winTopPosition;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.winBottomPosition;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.stepsObserver;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.backDropService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.eventListener;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.stepsContainerService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.documentService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.DOMService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.stepDrawerService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.optionsService;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.router;
    /**
     * @type {?}
     * @private
     */
    JoyrideStepService.prototype.logger;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/joyride-step-info.class.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideStepInfo = /** @class */ (function () {
    function JoyrideStepInfo() {
    }
    return JoyrideStepInfo;
}());
if (false) {
    /** @type {?} */
    JoyrideStepInfo.prototype.number;
    /** @type {?} */
    JoyrideStepInfo.prototype.name;
    /** @type {?} */
    JoyrideStepInfo.prototype.route;
    /** @type {?} */
    JoyrideStepInfo.prototype.actionType;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/joyride.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var JoyrideService = /** @class */ (function () {
    function JoyrideService(platformId, stepService, optionsService) {
        this.platformId = platformId;
        this.stepService = stepService;
        this.optionsService = optionsService;
        this.tourInProgress = false;
    }
    /**
     * @param {?=} options
     * @return {?}
     */
    JoyrideService.prototype.startTour = /**
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        if (!isPlatformBrowser(this.platformId)) {
            return of(new JoyrideStepInfo());
        }
        if (!this.tourInProgress) {
            this.tourInProgress = true;
            if (options) {
                this.optionsService.setOptions(options);
            }
            this.tour$ = this.stepService.startTour().pipe(finalize((/**
             * @return {?}
             */
            function () { return (_this.tourInProgress = false); })));
            this.tour$.subscribe();
        }
        return this.tour$;
    };
    /**
     * @return {?}
     */
    JoyrideService.prototype.closeTour = /**
     * @return {?}
     */
    function () {
        if (this.isTourInProgress())
            this.stepService.close();
    };
    /**
     * @return {?}
     */
    JoyrideService.prototype.isTourInProgress = /**
     * @return {?}
     */
    function () {
        return this.tourInProgress;
    };
    JoyrideService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    JoyrideService.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: JoyrideStepService },
        { type: JoyrideOptionsService }
    ]; };
    return JoyrideService;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    JoyrideService.prototype.tourInProgress;
    /**
     * @type {?}
     * @private
     */
    JoyrideService.prototype.tour$;
    /**
     * @type {?}
     * @private
     */
    JoyrideService.prototype.platformId;
    /**
     * @type {?}
     * @private
     */
    JoyrideService.prototype.stepService;
    /**
     * @type {?}
     * @private
     */
    JoyrideService.prototype.optionsService;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/joyride.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var routerModuleForChild = RouterModule.forChild([]);
var JoyrideModule = /** @class */ (function () {
    function JoyrideModule() {
    }
    /**
     * @return {?}
     */
    JoyrideModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: JoyrideModule,
            providers: [
                JoyrideService,
                JoyrideStepService,
                JoyrideStepsContainerService,
                JoyrideBackdropService,
                EventListenerService,
                DocumentService,
                JoyrideOptionsService,
                StepDrawerService,
                DomRefService,
                LoggerService,
                TemplatesService
            ]
        };
    };
    /**
     * @return {?}
     */
    JoyrideModule.forChild = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: JoyrideModule,
            providers: []
        };
    };
    JoyrideModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, routerModuleForChild],
                    declarations: [
                        JoyrideDirective,
                        JoyrideStepComponent,
                        JoyrideArrowComponent,
                        JoyrideButtonComponent,
                        JoyrideCloseButtonComponent
                    ],
                    entryComponents: [JoyrideStepComponent],
                    exports: [
                        JoyrideDirective
                    ]
                },] }
    ];
    return JoyrideModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/joyride.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ngx-joyride.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { ARROW_SIZE, DEFAULT_DISTANCE_FROM_MARGIN_LEFT, DEFAULT_DISTANCE_FROM_MARGIN_TOP, DEFAULT_TEXTS, DEFAULT_THEME_COLOR, DEFAULT_TIMEOUT_BETWEEN_STEPS, DISTANCE_FROM_TARGET, DocumentService, DomRefService, EventListenerService, JoyrideArrowComponent, JoyrideBackdropService, JoyrideButtonComponent, JoyrideCloseButtonComponent, JoyrideDirective, JoyrideModule, JoyrideOptionsService, JoyrideService, JoyrideStepComponent, JoyrideStepService, JoyrideStepsContainerService, LoggerService, NO_POSITION, ObservableCustomTexts, STEP_DEFAULT_POSITION, Scroll, StepActionType, StepDrawerService, TemplatesService, routerModuleForChild };
//# sourceMappingURL=ngx-joyride.js.map
